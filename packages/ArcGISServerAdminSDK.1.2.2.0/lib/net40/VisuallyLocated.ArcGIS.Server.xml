<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VisuallyLocated.ArcGIS.Server</name>
    </assembly>
    <members>
        <member name="T:VisuallyLocated.ArcGIS.Server.ServiceType">
            <summary>
            Represents the type of service
            </summary>
        </member>
        <member name="F:VisuallyLocated.ArcGIS.Server.ServiceType.MapServer">
            <summary>
            A service for performing map operations. 
            This is the standard service. 
            </summary>
            <remarks>
            Capabilities: Map, Query, Data
            </remarks>
        </member>
        <member name="F:VisuallyLocated.ArcGIS.Server.ServiceType.FeatureService">
            <summary>
            A service for performing editing operations.
            </summary>
            <remarks>
            Capabilities: Map, Query, Data
            </remarks>     
        </member>
        <member name="F:VisuallyLocated.ArcGIS.Server.ServiceType.GeometryServer">
            <summary>
            A service for performing geometry operations.
            </summary>
        </member>
        <member name="F:VisuallyLocated.ArcGIS.Server.ServiceType.SearchServer">
            <summary>
            A service for performing search operations.
            </summary>
        </member>
        <member name="F:VisuallyLocated.ArcGIS.Server.ServiceType.ImageServer">
            <summary>
            A service for displaying images.
            </summary>
            <remarks>
            Capabilities: Image, Metadata
            </remarks>
        </member>
        <member name="F:VisuallyLocated.ArcGIS.Server.ServiceType.GeocodeServer">
            <summary>
            A service for performing geocoding operations.
            </summary>
            <remarks>
            Capabilities: Geocode, ReverseGeocode
            </remarks>
        </member>
        <member name="F:VisuallyLocated.ArcGIS.Server.ServiceType.GeoDataServer">
            <summary>
            
            </summary>
            <remarks>
            Capabilities: Query, Extraction
            </remarks>
        </member>
        <member name="F:VisuallyLocated.ArcGIS.Server.ServiceType.GPServer">
            <summary>
            A service for performing geoprocessing operations.
            </summary>
        </member>
        <member name="F:VisuallyLocated.ArcGIS.Server.ServiceType.GlobeServer">
            <summary>
            
            </summary>
            <remarks>
            Capabilities: globe, animation, query
            </remarks>
        </member>
        <member name="T:VisuallyLocated.ArcGIS.Server.RequestStatus">
            <summary>
            Represents the status of the request.
            </summary>
        </member>
        <member name="F:VisuallyLocated.ArcGIS.Server.RequestStatus.Success">
            <summary>
            Represents a successful request.
            </summary>
        </member>
        <member name="F:VisuallyLocated.ArcGIS.Server.RequestStatus.Error">
            <summary>
            Represents a request with an error.
            </summary>
        </member>
        <member name="T:VisuallyLocated.ArcGIS.Server.ServiceException">
            <summary>
            An exception that occured during the request.
            </summary>
        </member>
        <member name="T:VisuallyLocated.ArcGIS.Server.UploadedItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisuallyLocated.ArcGIS.Server.UploadedItem.ID">
            <summary>
            Gets the ID of the uploaded item.
            </summary>
        </member>
        <member name="P:VisuallyLocated.ArcGIS.Server.UploadedItem.Name">
            <summary>
            Gets the name of the uploaded item.
            </summary>
        </member>
        <member name="P:VisuallyLocated.ArcGIS.Server.UploadedItem.Description">
            <summary>
            Gets the description of the uploaded item.
            </summary>
        </member>
        <member name="P:VisuallyLocated.ArcGIS.Server.UploadedItem.PathOnServer">
            <summary>
            Gets the location
            </summary>
        </member>
        <member name="P:VisuallyLocated.ArcGIS.Server.UploadedItem.Committed">
            <summary>
            Gets a value indicating whether the item was committed to the server.
            </summary>
        </member>
        <member name="T:VisuallyLocated.ArcGIS.Server.AdminService">
            <summary>
            Represents a connection to the ArcGIS Server Admin REST API.
            </summary>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.#ctor(System.String)">
            <summary>
            Initializes a new instance of AdminService. 
            </summary>
            <param name="serverUrl">The url to the server to administer. 
            This value should include the full url to get to the ArcGIS Server, included http and port number.</param>
            <exception cref="T:System.ArgumentNullException">The url cannot be null.</exception>
            <example>
            <code>
            AdminService service = new AdminService("http://localhost:6080");
            </code>
            </example>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.GenerateTokenAsync(System.String,System.String)">
            <summary>
            Generates a new <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/>
            </summary>
            <param name="user">The ArcGIS Server Manager user name to use.</param>
            <param name="password">The passord for the given user name.</param>
            <returns>The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the given name and password.</returns>
            <exception cref="T:System.ArgumentNullException">User name cannot be null.</exception>
            <exception cref="T:System.ArgumentNullException">Password cannot be null.</exception>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.GetMachinesAsync(VisuallyLocated.ArcGIS.Server.UserToken)">
            <summary>
            Retrieves the machines associated with the ArcGIS Server.
            </summary>
            <param name="token">The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the ArcGIS Server Manager user.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">token cannot be null.</exception>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.GetServiceAsync(VisuallyLocated.ArcGIS.Server.UserToken,System.String,VisuallyLocated.ArcGIS.Server.ServiceType,System.String)">
            <summary>
            Retrieves the service from the ArcGIS Server under the folder with the given name.
            </summary>
            <param name="token">The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the ArcGIS Server Manager user.</param>
            <param name="serviceName">The name of the service to get.</param>
            <param name="serviceType">The <see cref="T:VisuallyLocated.ArcGIS.Server.ServiceType"/> of the service.</param>
            <param name="folder">The folder the service in under. If no folder is given,
            will attempt to get the service under the root folder.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">token cannot be null.</exception>
            <exception cref="T:System.ArgumentNullException">serviceName cannot be null.</exception>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.GetServicesAsync(VisuallyLocated.ArcGIS.Server.UserToken,System.Boolean,System.String)">
            <summary>
            Retrieves al of the services under the given folder. If no folder is given, 
            will retrieve services from the root folder.
            </summary>
            <param name="token">The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the ArcGIS Server Manager user.</param>
            <param name="getFulldetails">A value indicating whether all details for the services should be returned.</param>
            <param name="folder">The folder under which to get services. If no folder is given,
            will get services under the root folder.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">token cannot be null.</exception>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.CreateFolderAsync(VisuallyLocated.ArcGIS.Server.UserToken,System.String)">
            <summary>
            Creates a new folder under the root directory in the server.
            </summary>
            <param name="token">The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the ArcGIS Server Manager user.</param>
            <param name="folderName">The name of the folder to create.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">token cannot be null.</exception>
            <exception cref="T:System.ArgumentNullException">folderName cannot be null.</exception>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.EditServiceAsync(VisuallyLocated.ArcGIS.Server.UserToken,VisuallyLocated.ArcGIS.Server.Service,System.String)">
            <summary>
            Posts the service to the server.
            </summary>
            <param name="token">The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the ArcGIS Server Manager user.</param>
            <param name="service">The service to post.</param>
            <param name="folder">The folder the service is contained within. 
            If no folder is given, will attempt to post the service to the root folder.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">token cannot be null.</exception>
            <exception cref="T:System.ArgumentNullException">service cannot be null.</exception>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.GetUploadedItems(VisuallyLocated.ArcGIS.Server.UserToken)">
            <summary>
            Get all of the items uploaded to the server.
            </summary>
            <param name="token">The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the ArcGIS Server Manager user.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">token cannot be null.</exception>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.UploadItemAsync(VisuallyLocated.ArcGIS.Server.UserToken,VisuallyLocated.ArcGIS.Server.UploadParameters)">
            <summary>
            Upload an item to the server.
            </summary>
            <param name="token">The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the ArcGIS Server Manager user.</param>
            <param name="parameters">The parameters of the item to upload.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">token cannot be null.</exception>
            <exception cref="T:System.ArgumentNullException">parameters cannot be null.</exception>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.RegisterExtensionAsync(VisuallyLocated.ArcGIS.Server.UserToken,System.String)">
            <summary>
            Registers a new server object extension file with the Server. Before your register the file, 
            you need to upload the .SOE file to the server using <see cref="M:UploadItemAsync"/>.
            </summary>
            <param name="token">The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the ArcGIS Server Manager user.</param>
            <param name="id">The id of the extension to register.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">token cannot be null.</exception>
            <exception cref="T:System.ArgumentNullException">id cannot be null.</exception>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.StopServicesAsync(VisuallyLocated.ArcGIS.Server.UserToken,System.String)">
            <summary>
            Stops all services in the given folder. If no folder if given, will stop all services under the root folder.
            </summary>
            <param name="token">The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the ArcGIS Server Manager user.</param>
            <param name="folder">The folder under which all services should be stopped. If not folder is given,
            will stop all services under the root folder.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">token cannot be null.</exception>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.StartServicesAsync(VisuallyLocated.ArcGIS.Server.UserToken,System.String)">
            <summary>
            Starts all services in the given folder. If no folder if given, will start all services under the root folder.
            </summary>
            <param name="token">The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the ArcGIS Server Manager user.</param>
            <param name="folder">The folder under which all services should be started. If not folder is given,
            will start all services under the root folder.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">token cannot be null.</exception>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.StartServiceAsync(VisuallyLocated.ArcGIS.Server.UserToken,System.String,VisuallyLocated.ArcGIS.Server.ServiceType,System.String)">
            <summary>
            Start the given service on all registered machines.
            </summary>
            <param name="token">The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the ArcGIS Server Manager user.</param>
            <param name="serviceName">The name of the service to start.</param>
            <param name="serviceType">The type of the service to start.</param>
            <param name="folder">The folder the service is under. If no folder is given, 
            will attempt to stop the service under the root folder.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">token cannot be null.</exception>
            <exception cref="T:System.ArgumentNullException">serviceName cannot be null.</exception>
        </member>
        <member name="M:VisuallyLocated.ArcGIS.Server.AdminService.StopServiceAsync(VisuallyLocated.ArcGIS.Server.UserToken,System.String,VisuallyLocated.ArcGIS.Server.ServiceType,System.String)">
            <summary>
            Stop the services on all registered machines.
            </summary>
            <param name="token">The <see cref="T:VisuallyLocated.ArcGIS.Server.UserToken"/> for the ArcGIS Server Manager user.</param>
            <param name="serviceName">The name of the service to stop.</param>
            <param name="serviceType">The type of the service to stop.</param>
            <param name="folder">The folder the service is under. If no folder is given, 
            will attempt to start the service under the root folder.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">token cannot be null.</exception>
            <exception cref="T:System.ArgumentNullException">serviceName cannot be null.</exception>
        </member>
    </members>
</doc>
