<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/30/2014 10:46:14 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="T440P-20131227B"
  DTS:CreatorName="INTRANET\dlucas"
  DTS:DelayValidation="True"
  DTS:DTSID="{0D63413F-C3D6-4EB7-9AFA-B2D96CC9A1AB}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.6020.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="LoadOfficialCounts"
  DTS:PackageType="5"
  DTS:VersionBuild="336"
  DTS:VersionGUID="{F8C2A04D-17AC-4A8F-AD9E-64A31F902DF0}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Totals]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{00512B72-1A6B-4C82-8C99-6089A5431F73}"
      DTS:ObjectName="Totals">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::currentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=Control Totals.161.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8DED3315-4C25-4240-A3C9-DF4E94834B6D}"
      DTS:ObjectName="FilePath">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D2C55E21-FEDF-49BB-BB95-828144FBC403}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CalendarYear">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8827DA95-9273-41F7-87B5-3EDEE8F728DD}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;IF NOT EXISTS(SELECT 1 FROM information_schema.tables WHERE TABLE_SCHEMA = 'dbo' AND table_name = 'HSCRC_Load')&#xA;CREATE TABLE HSCRC_Load&#xA;(&#xA;Id INT PRIMARY KEY IDENTITY(1,1),&#xA;CalendarYear INT NOT NULL,&#xA;SourceFilename NVARCHAR(255) NOT NULL,&#xA;PatientTypeClass NVARCHAR(255) NOT NULL,&#xA;LoadDate DATETIME NOT NULL, Quarter INT NOT NULL&#xA;);&#xA;&#xA;IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE TABLE_SCHEMA = 'dbo' AND table_name = 'HSCRC_Totals')&#xA;CREATE TABLE HSCRC_Totals&#xA;(&#xA;Id INT PRIMARY KEY IDENTITY(1,1),&#xA;HSCRC_Load_Id INT FOREIGN KEY REFERENCES HSCRC_LOAD (id),&#xA;HospitalNumber varchar(8) NULL,&#xA;HospitalName NVARCHAR(255) NOT NULL,&#xA;TotalCase INT NOT NULL,&#xA;LOS INT,&#xA;TotalCharges MONEY NOT NULL&#xA;);&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="createTablesIfNotExisting">
      <DTS:VariableValue
        DTS:DataType="8">IF NOT EXISTS(SELECT 1 FROM information_schema.tables WHERE TABLE_SCHEMA = 'dbo' AND table_name = 'HSCRC_Load')
CREATE TABLE HSCRC_Load
(
Id INT PRIMARY KEY IDENTITY(1,1),
CalendarYear INT NOT NULL,
SourceFilename NVARCHAR(255) NOT NULL,
PatientTypeClass NVARCHAR(255) NOT NULL,
LoadDate DATETIME NOT NULL, Quarter INT NOT NULL
);

IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE TABLE_SCHEMA = 'dbo' AND table_name = 'HSCRC_Totals')
CREATE TABLE HSCRC_Totals
(
Id INT PRIMARY KEY IDENTITY(1,1),
HSCRC_Load_Id INT FOREIGN KEY REFERENCES HSCRC_LOAD (id),
HospitalNumber varchar(8) NULL,
HospitalName NVARCHAR(255) NOT NULL,
TotalCase INT NOT NULL,
LOS INT,
TotalCharges MONEY NOT NULL
);</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6AB55246-BED3-4ABA-9422-CC34C7FE160C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="currentFile">
      <DTS:VariableValue
        DTS:DataType="8">Control Totals.161.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{13DE94E4-B40A-4E71-BCFB-1CEFEDCB3ACB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DECLARE @LoadId INT&#xA; SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = &quot; + (DT_STR, 4, 1252) @[User::CalendarYear] + &quot;&#xA; AND Quarter = &quot; + (DT_STR, 1, 1252) @[User::Quarter] + &quot; AND PatientTypeClass = 'I');&#xA; WHILE(@LoadId IS NOT NULL)&#xA; BEGIN&#xA; IF @LoadId IS NOT NULL&#xA;&#x9;BEGIN&#xA;&#x9;DELETE FROM HSCRC_Totals&#xA;&#x9;WHERE HSCRC_Load_Id = @LoadId&#xA;&#xA;&#x9;DELETE FROM HSCRC_Load WHERE Id = @LoadId&#xA;&#x9;END&#xA;&#x9; SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = &quot; + (DT_STR, 30, 1252) @[User::CalendarYear] + &quot; AND Quarter = &quot; + (DT_STR, 1, 1252) @[User::Quarter] + &quot; AND PatientTypeClass = 'I');&#xA;END&#xA;&#xA;INSERT INTO HSCRC_Load (CalendarYear, Quarter, SourceFilename, PatientTypeClass, LoadDate)&#xA;VALUES (&quot; + (DT_STR, 4, 1252) @[User::CalendarYear] + &quot;,&#xA;&#x9;&#x9;&quot; + (DT_STR, 1,1252) @[User::Quarter] + &quot;,&#xA;&#x9;&#x9;'&quot; + @[User::currentFile] + &quot;',&#xA;&#x9;&#x9;'I', GETDATE());&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InsertLoadIP">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE @LoadId INT
 SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = 0
 AND Quarter = 0 AND PatientTypeClass = 'I');
 WHILE(@LoadId IS NOT NULL)
 BEGIN
 IF @LoadId IS NOT NULL
	BEGIN
	DELETE FROM HSCRC_Totals
	WHERE HSCRC_Load_Id = @LoadId

	DELETE FROM HSCRC_Load WHERE Id = @LoadId
	END
	 SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = 0 AND Quarter = 0 AND PatientTypeClass = 'I');
END

INSERT INTO HSCRC_Load (CalendarYear, Quarter, SourceFilename, PatientTypeClass, LoadDate)
VALUES (0,
		0,
		'Control Totals.161.xlsx',
		'I', GETDATE());</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7CEB86DA-190E-4F13-A80A-E0DA3473EECA}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DECLARE @LoadId INT&#xA; SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = &quot; + (DT_STR, 4, 1252) @[User::CalendarYear] + &quot;&#xA; AND Quarter = &quot; + (DT_STR, 1, 1252) @[User::Quarter] + &quot; AND PatientTypeClass = 'O');&#xA; WHILE(@LoadId IS NOT NULL)&#xA; BEGIN&#xA; IF @LoadId IS NOT NULL&#xA;&#x9;BEGIN&#xA;&#x9;DELETE FROM HSCRC_Totals&#xA;&#x9;WHERE HSCRC_Load_Id = @LoadId&#xA;&#xA;&#x9;DELETE FROM HSCRC_Load WHERE Id = @LoadId&#xA;&#x9;END&#xA;&#x9; SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = &quot; + (DT_STR, 30, 1252) @[User::CalendarYear] + &quot; AND Quarter = &quot; + (DT_STR, 1, 1252) @[User::Quarter] + &quot; AND PatientTypeClass = 'O');&#xA;END&#xA;&#xA;INSERT INTO HSCRC_Load (CalendarYear, Quarter, SourceFilename, PatientTypeClass, LoadDate)&#xA;VALUES (&quot; + (DT_STR, 4, 1252) @[User::CalendarYear] + &quot;,&#xA;&#x9;&#x9;&quot; + (DT_STR, 1,1252) @[User::Quarter] + &quot;,&#xA;&#x9;&#x9;'&quot; + @[User::currentFile] + &quot;',&#xA;&#x9;&#x9;'O', GETDATE());&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InsertLoadOP">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE @LoadId INT
 SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = 0
 AND Quarter = 0 AND PatientTypeClass = 'O');
 WHILE(@LoadId IS NOT NULL)
 BEGIN
 IF @LoadId IS NOT NULL
	BEGIN
	DELETE FROM HSCRC_Totals
	WHERE HSCRC_Load_Id = @LoadId

	DELETE FROM HSCRC_Load WHERE Id = @LoadId
	END
	 SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = 0 AND Quarter = 0 AND PatientTypeClass = 'O');
END

INSERT INTO HSCRC_Load (CalendarYear, Quarter, SourceFilename, PatientTypeClass, LoadDate)
VALUES (0,
		0,
		'Control Totals.161.xlsx',
		'O', GETDATE());</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D3A99A49-20E6-4446-BF3F-B2CD675E7960}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LoadIdForIP">
      <DTS:VariableValue
        DTS:DataType="2">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A439DA98-F20D-4369-BA59-2284F3241564}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LoadIdForOP">
      <DTS:VariableValue
        DTS:DataType="2">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{44912E8B-ED94-4526-BBCE-0AACC3992691}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Quarter">
      <DTS:VariableValue
        DTS:DataType="2">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E972252B-72A9-4A4D-ADBC-D3335719D4E2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT Id &#xA;FROM HSCRC_Load&#xA;WHERE CalendarYear = &quot; + (DT_STR, 4, 1252) @[User::CalendarYear] + &quot; AND&#xA; Quarter = &quot; + (DT_STR, 1, 1252) @[User::Quarter] + &quot; AND&#xA; PatientTypeClass = 'I'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="selectIPIntoVar">
      <DTS:VariableValue
        DTS:DataType="8">SELECT Id 
FROM HSCRC_Load
WHERE CalendarYear = 0 AND
 Quarter = 0 AND
 PatientTypeClass = 'I'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C67336B1-2208-482D-BFF8-AF323CEB5ECE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT Id &#xA;FROM HSCRC_Load &#xA;WHERE CalendarYear = &quot; + (DT_STR, 4, 1252) @[User::CalendarYear] + &quot; AND&#xA; Quarter = &quot; + (DT_STR, 1, 1252) @[User::Quarter] + &quot; AND&#xA; PatientTypeClass = 'O'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="selectOPIntoVar">
      <DTS:VariableValue
        DTS:DataType="8">SELECT Id 
FROM HSCRC_Load 
WHERE CalendarYear = 0 AND
 Quarter = 0 AND
 PatientTypeClass = 'O'</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{9298186C-3785-43B3-9265-E7F958AB204C}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach OP and IP Control Totals File, perform ETL and archive file">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{4A50B363-D26E-42BC-8954-56C367907939}"
        DTS:ObjectName="{4A50B363-D26E-42BC-8954-56C367907939}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[$Project::SourceFolder]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\rnaik\Desktop\Load" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Archive Data"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{A9973EEF-728D-41BF-8709-9BD6983FA232}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive Data"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::currentFile"
              TaskIsSourceVariable="True"
              TaskDestinationPath="$Project::ArchiveFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Create HSCRC_Totals table and HSCRC_Load table if it does not exist"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{7E5A1C3A-3686-400A-9BDF-B33AAFCBCFE3}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create HSCRC_Totals table and HSCRC_Load table if it does not exist"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::createTablesIfNotExisting" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{DB8A40DA-31A2-4CE9-BA64-366A94D13C03}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import IP Totals"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion"
                  componentClassID="{62B1106C-7DB8-4EC8-ADD6-4C664DFFC54A}"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Inputs[Data Conversion Input].Columns[Hospital Number]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Hospital Number"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Number]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Outputs[Data Conversion Output].Columns[Hospital Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="8"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Outputs[Data Conversion Output].Columns[Hospital Number]"
                          name="Hospital Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Number]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column"
                  componentClassID="{49928E82-9C4E-49F0-AABE-3812B82707EC}"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Output].Columns[HSCRC_Load_ID]"
                          dataType="i2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Output].Columns[HSCRC_Load_ID]"
                          name="HSCRC_Load_ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::LoadIdForIP]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::LoadIdForIP]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source"
                  componentClassID="{8C084929-27D1-479F-9641-ABB7CDADF1AC}"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Inpatient$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Totals]"
                      connectionManagerRefId="Package.ConnectionManagers[Totals]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Number]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Hospital Number]"
                          length="255"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Number]"
                          name="Hospital Number"
                          truncationRowDisposition="IgnoreFailure" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Hospital Name]"
                          length="255"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Name]"
                          name="Hospital Name"
                          truncationRowDisposition="IgnoreFailure" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Total Case]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Case]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Total Case]"
                          name="Total Case"
                          truncationRowDisposition="IgnoreFailure" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[LOS]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[LOS]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[LOS]"
                          name="LOS"
                          truncationRowDisposition="IgnoreFailure" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Total Charges]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Charges]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Total Charges]"
                          name="Total Charges"
                          truncationRowDisposition="IgnoreFailure" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Hospital Number]"
                          dataType="wstr"
                          length="255"
                          name="Hospital Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Hospital Name]"
                          dataType="wstr"
                          length="255"
                          name="Hospital Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Case]"
                          dataType="r8"
                          name="Total Case" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[LOS]"
                          dataType="r8"
                          name="LOS" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Charges]"
                          dataType="cy"
                          name="Total Charges" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Hospital Number]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Hospital Number]"
                          name="Hospital Number" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Hospital Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Hospital Name]"
                          name="Hospital Name" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Total Case]"
                          dataType="r8"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Total Case]"
                          name="Total Case" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[LOS]"
                          dataType="r8"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[LOS]"
                          name="LOS" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Total Charges]"
                          dataType="cy"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Total Charges]"
                          name="Total Charges" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination"
                  componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[HSCRC_Totals]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}:external"
                      connectionManagerRefId="Project.ConnectionManagers[HSCRC_Reports]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LOS]"
                          cachedDataType="r8"
                          cachedName="LOS"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LOS]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[LOS]" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HSCRC_Load_ID]"
                          cachedDataType="i2"
                          cachedName="HSCRC_Load_ID"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HSCRC_Load_Id]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Output].Columns[HSCRC_Load_ID]" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Hospital Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Hospital Name"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalName]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Name]" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Case]"
                          cachedDataType="r8"
                          cachedName="Total Case"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCase]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Total Case]" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Charges]"
                          cachedDataType="cy"
                          cachedName="Total Charges"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCharges]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[Total Charges]" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Hospital Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="Hospital Number"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalNumber]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Outputs[Data Conversion Output].Columns[Hospital Number]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                          dataType="i4"
                          name="Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HSCRC_Load_Id]"
                          dataType="i4"
                          name="HSCRC_Load_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalNumber]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="HospitalNumber" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalName]"
                          dataType="wstr"
                          length="255"
                          name="HospitalName" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCase]"
                          dataType="i4"
                          name="TotalCase" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LOS]"
                          dataType="i4"
                          name="LOS" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCharges]"
                          dataType="cy"
                          name="TotalCharges" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals.Paths[Data Conversion Output]"
                  endId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals.Paths[Derived Column Output]"
                  endId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals.Paths[Excel Source Output]"
                  endId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{71AE597C-0CAA-40A2-BB1E-CC12EE4E82B6}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import OP Totals"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion"
                  componentClassID="{62B1106C-7DB8-4EC8-ADD6-4C664DFFC54A}"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Inputs[Data Conversion Input].Columns[Hospital Number]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Hospital Number"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Number]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Outputs[Data Conversion Output].Columns[Hospital Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="8"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Outputs[Data Conversion Output].Columns[Hospital Number]"
                          name="Hospital Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Number]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column"
                  componentClassID="{49928E82-9C4E-49F0-AABE-3812B82707EC}"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Output].Columns[HSCRC_Load_Id]"
                          dataType="i2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Output].Columns[HSCRC_Load_Id]"
                          name="HSCRC_Load_Id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::LoadIdForOP]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::LoadIdForOP]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source"
                  componentClassID="{8C084929-27D1-479F-9641-ABB7CDADF1AC}"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Outpatient$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable">User::HSCRC_ExcelSheet_Outpatient</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Totals]"
                      connectionManagerRefId="Package.ConnectionManagers[Totals]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Number]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Hospital Number]"
                          length="255"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Number]"
                          name="Hospital Number"
                          truncationRowDisposition="IgnoreFailure" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Hospital Name]"
                          length="255"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Name]"
                          name="Hospital Name"
                          truncationRowDisposition="IgnoreFailure" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Total Case]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Case]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Total Case]"
                          name="Total Case"
                          truncationRowDisposition="IgnoreFailure" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Total Charges]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Charges]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Total Charges]"
                          name="Total Charges"
                          truncationRowDisposition="IgnoreFailure" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Hospital Number]"
                          dataType="wstr"
                          length="255"
                          name="Hospital Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Hospital Name]"
                          dataType="wstr"
                          length="255"
                          name="Hospital Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Case]"
                          dataType="r8"
                          name="Total Case" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Charges]"
                          dataType="cy"
                          name="Total Charges" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Hospital Number]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Hospital Number]"
                          name="Hospital Number" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Hospital Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Hospital Name]"
                          name="Hospital Name" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Total Case]"
                          dataType="r8"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Total Case]"
                          name="Total Case" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Total Charges]"
                          dataType="cy"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Total Charges]"
                          name="Total Charges" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination"
                  componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[HSCRC_Totals]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}:external"
                      connectionManagerRefId="Project.ConnectionManagers[HSCRC_Reports]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HSCRC_Load_Id]"
                          cachedDataType="i2"
                          cachedName="HSCRC_Load_Id"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HSCRC_Load_Id]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Output].Columns[HSCRC_Load_Id]" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Hospital Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Hospital Name"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalName]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Hospital Name]" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Case]"
                          cachedDataType="r8"
                          cachedName="Total Case"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCase]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Total Case]" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Charges]"
                          cachedDataType="cy"
                          cachedName="Total Charges"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCharges]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[Total Charges]" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Hospital Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="Hospital Number"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalNumber]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Outputs[Data Conversion Output].Columns[Hospital Number]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                          dataType="i4"
                          name="Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HSCRC_Load_Id]"
                          dataType="i4"
                          name="HSCRC_Load_Id" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalNumber]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="HospitalNumber" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalName]"
                          dataType="wstr"
                          length="255"
                          name="HospitalName" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCase]"
                          dataType="i4"
                          name="TotalCase" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LOS]"
                          dataType="i4"
                          name="LOS" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCharges]"
                          dataType="cy"
                          name="TotalCharges" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals.Paths[Data Conversion Output]"
                  endId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals.Paths[Derived Column Output]"
                  endId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals.Paths[Excel Source Output]"
                  endId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert IP Load id after checking and deleting any existing matching load id and associated records"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{42184A72-26CA-4F8C-900B-3307B189DDF5}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert IP Load id after checking and deleting any existing matching load id and associated records"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::InsertLoadIP" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert OP Load id after checking and deleting any existing matching load id and associated records"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{BD7B8DC3-1FBF-4D03-A557-B4AB6EDD721E}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert OP Load id after checking and deleting any existing matching load id and associated records"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::InsertLoadOP" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Parse filename and update variables"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{72113AE3-AB90-41A6-839D-19B772FD27C1}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Parse filename and update variables"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_186c9d01f6a24f5a8f41732710bea665"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::currentFile"
              ReadWriteVariables="User::CalendarYear,User::Quarter">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text.RegularExpressions;
using System.Linq;
#endregion

namespace ST_186c9d01f6a24f5a8f41732710bea665
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string fileName = (string) Dts.Variables["User::currentFile"].Value;
		    bool isIpInFilename = false;
		    int countPeriods = fileName.Count(c => c == '.');
		    if (countPeriods > 1)
		    {
		        isIpInFilename = IsIpInFilename(fileName);
		    }

		    GetYearAndQuarter(isIpInFilename);

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        /// <summary>
        /// Sets the Year and Quarter from the filename into variables to be used by the ETL.
        /// </summary>
        /// <param name="hasIp"></param>
        public void GetYearAndQuarter(bool hasIp)
        {
            const int numParameters = 1;
            string fileName = (string)Dts.Variables["User::currentFile"].Value;
            int i = 0;
            if (!hasIp)
            {
                foreach (string part in fileName.Split('.'))
                {
                    switch (i)
                    {
                        case 1:
                            if (part.Length == 3)
                            {
                                Dts.Variables["User::CalendarYear"].Value = Convert.ToInt16("20" + part.Substring(0, 2));
                                int quarter = Convert.ToInt16(part.Substring(2, 1));
                                if (quarter == 1 || quarter == 2 || quarter == 3 || quarter == 4)
                                {
                                    Dts.Variables["User::Quarter"].Value = Convert.ToInt16(part.Substring(2, 1));
                                }
                                else
                                {
                                    throw new FileLoadException(
                                        "Quarter in filename is invalid: value must be 1, 2, 3 or 4.");
                                }
                            }
                            else
                            {
                                Dts.Events.FireError(0, "Script Task to update parameters based on file name",
                                    "Incorrect parameter format in filename for Calendar Year and Quarter", String.Empty,
                                    0);
                            }
                            break;
                    }
                    i++;
                }
            }

            else
            {
                foreach (string part in fileName.Split('.'))
                {
                    switch (i)
                    {
                        case 4:
                            if (part.Length == 3 && i >= 3)
                            {
                                Dts.Variables["User::CalendarYear"].Value = Convert.ToInt16("20" + part.Substring(0, 2));
                                int quarter = Convert.ToInt16(part.Substring(2, 1));
                                if (quarter == 1 || quarter == 2 || quarter == 3 || quarter == 4)
                                {
                                    Dts.Variables["User::Quarter"].Value = Convert.ToInt16(part.Substring(2, 1));
                                }
                                else
                                {
                                    throw new FileLoadException(
                                        "Quarter in filename is invalid: value must be 1, 2, 3 or 4.");
                                }
                            }
                            else
                            {
                                Dts.Events.FireError(0, "Script Task to update parameters based on file name", "Incorrect parameter format in filename for Calendar Year and Quarter", String.Empty, 0);
                            }
                            break;
                    }
                    i++;
                }
            }

            if (i < numParameters)
            {
                Dts.Events.FireError(0, "Script Task to update parameters based on file name", "Cannot find a parameter match", String.Empty, 0);
            }
        }

        /// <summary>
        /// Determines from the filename whether the IP is used in the path.
        /// </summary>
        /// <param name="filename">The filename to use</param>
        /// <returns>True or false</returns>
        public bool IsIpInFilename(string filename)
        {
            Regex ip = new Regex(@"\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b");
            MatchCollection result = ip.Matches(filename);
            if (result.Count >= 1)
            {
                return true;
            }
            return false;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_186c9d01f6a24f5a8f41732710bea665</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_186c9d01f6a24f5a8f41732710bea665</msb:DisplayName>
		<msb:ProjectId>{28A7208C-BC11-497C-B756-9883E70373FA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_186c9d01f6a24f5a8f41732710bea665.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_186c9d01f6a24f5a8f41732710bea665.Properties.Settings.get_Default():ST_186c9d01f6a24f5a8f41732710bea665.Properties.Sett" +
    "ings")]

namespace ST_186c9d01f6a24f5a8f41732710bea665.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_186c9d01f6a24f5a8f41732710bea665.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CD82A4D3-FF76-4663-842A-97FBD21118A7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_186c9d01f6a24f5a8f41732710bea665</RootNamespace>
    <AssemblyName>ST_186c9d01f6a24f5a8f41732710bea665</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_186c9d01f6a24f5a8f41732710bea665")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_186c9d01f6a24f5a8f41732710bea665")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_186c9d01f6a24f5a8f41732710bea665.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_186c9d01f6a24f5a8f41732710bea665.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_186c9d01f6a24f5a8f41732710bea665.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_186c9d01f6a24f5a8f41732710bea665.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_186c9d01f6a24f5a8f41732710bea665.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_186c9d01f6a24f5a8f41732710bea665.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFKpeFQAAAAAAAAAAOAAAiELAQsAABgAAAAIAAAAAAAALjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOA1AABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
NgAAAAAAAEgAAAACAAUAmCQAAEgRAAABAAAAAAAAAOAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqGgIfLv4BKgAAEzADAGYAAAACAAARAigWAAAKbxcAAApycwAAcG8YAAAK
bxkAAAp0HwAAAQoWCwZ+BAAABC0RFP4GDAAABnMaAAAKgAQAAAR+BAAABCgBAAArDAgXMQgCBigK
AAAGCwIHKAkAAAYCKBYAAAoWbxwAAAoqAAATMAYAZwIAAAMAABECKBYAAApvFwAACnJzAABwbxgA
AApvGQAACnQfAAABChYLAzoGAQAABheNIgAAARMGEQYWHy6dEQZvHQAAChMHFhMIONYAAAARBxEI
mgwHEwkRCRdAuwAAAAhvHgAAChlAjQAAAAIoFgAACm8XAAAKcpcAAHBvGAAACnK9AABwCBYYbx8A
AAooIAAACighAAAKjCQAAAFvIgAACggYF28fAAAKKCEAAAoNCRcuDAkYLggJGS4ECRozLgIoFgAA
Cm8XAAAKcsMAAHBvGAAACggYF28fAAAKKCEAAAqMJAAAAW8iAAAKKy1y3wAAcHMjAAAKegIoFgAA
Cm8kAAAKFnJXAQBwcr8BAHB+JQAAChZvJgAACiYHF1gLEQgXWBMIEQgRB45pPx////84EgEAAAYX
jSIAAAETChEKFh8unREKbx0AAAoTCxYTDDjnAAAAEQsRDJoTBAcTDRENGkDLAAAAEQRvHgAAChlA
nAAAAAcZP5UAAAACKBYAAApvFwAACnKXAABwbxgAAApyvQAAcBEEFhhvHwAACiggAAAKKCEAAAqM
JAAAAW8iAAAKEQQYF28fAAAKKCEAAAoTBREFFy4PEQUYLgoRBRkuBREFGjMvAigWAAAKbxcAAApy
wwAAcG8YAAAKEQQYF28fAAAKKCEAAAqMJAAAAW8iAAAKKy1y3wAAcHMjAAAKegIoFgAACm8kAAAK
FnJXAQBwcr8BAHB+JQAAChZvJgAACiYHF1gLEQwXWBMMEQwRC45pPw7///8HFy8iAigWAAAKbyQA
AAoWclcBAHBySgIAcH4lAAAKFm8mAAAKJioAEzACACAAAAAEAAARcoYCAHBzJwAACgoGA28oAAAK
CwdvKQAAChcyAhcqFioeAigqAAAKKrQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAADIBAAAI34AADQFAABABwAAI1N0cmluZ3MAAAAAdAwAANQCAAAjVVMASA8A
ABAAAAAjR1VJRAAAAFgPAADwAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPolMwAWAAABAAAA
KAAAAAUAAAAHAAAADAAAAAQAAAAqAAAAAgAAABEAAAAEAAAAAgAAAAMAAAAEAAAAAQAAAAEAAAAF
AAAAAQAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYA
oAGLAQYAhwJtAgYAsgKgAgYAyQKgAgYA5gKgAgYABQOgAgYAHgOgAgYANwOgAgYAUgOgAgYAbQOg
AgYAhgOgAgYAvwOfAwYA3wOfAwYAEAT9AwYALQS6AAYAMgS6AAYAVgSgAgoAggRsBAoAmwRsBAYA
sASfAw4A0gQUAQYAAQW6AA4ALwUUARIAiAVoBRIAoAVoBQYAvAW6ABYA2wXPBQYAAQbmBQYAJAa6
AAYASwa6AAYAWwa6AAYAdQZrBg4AhwYUAQoA1Qa2BgoA2wa2BgAAAAABAAAAAAABAAEAAAAQADIA
PAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAUADQARAH8BEwAR
AKwBFwARAPYBOQARAAgFnAAGBkACUQBWgEgCVABWgFACVABQIAAAAACDGLwBGwABAFggAAAAAJMI
wgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8
ARsAAgCnIAAAAACRGMsEkwACAMQgAAAAAIYAGgIbAAIAOCEAAAAAhgAfAkcAAgCsIwAAAACGADEC
TAADANgjAAAAAIYYvAEbAAQAuyAAAAAAkQD0BJcABAAAAAEAWAIAAAEAXgIAAAEAZAIAAAEA/wQ5
ALwBYgBBALwBYgBJALwBYgBRALwBYgBZALwBYgBhALwBYgBpALwBYgBxALwBYgB5ALwBYgCBALwB
YgCJALwBZwCRALwBGwCZALwBGwAJALwBGwChAEQEbAChAF8EcwApALwBeAC5ALwBhADJALwBGwAR
ALwBGwDRALwBGwAZAEEFpADhAJIFqQDpAKkFrgDxALIFtAAMALwBvwABAQ8GxQDhABUGZwD5ACkG
4gD5AC8G6QD5ADoG7QD5AEQG8wAZAVMG+QDxAGEG/gApAbwBYgDhAJsGAwH5AKYGCQExAawGDAE5
AbwBYgA5AesGKgFBAfMG6QAZALwBGwAIABgAWAAIABwAXQApAJMAigAuABMAggEuABsAqwEuAGMA
0QEuAAsAOgEuADMAggEuAFsAyAEuACsAqwEuACMAqwEuADsAsQEuAEMAqwFDAGsAXQBJAJMAigBh
AJsAXQCBAJsAXQCDAKsAXQCAAZsAXQB/ANwAFQExAQIAAQADAAMAAABvAS8AAADuATQAAAASAkIA
AgACAAMAAgADAAUAAQAEAAUAAgAFAAcAuAAEgAAAAQAAAEUVAVQAAAAAAAB/AAAABAAAAAAAAAAA
AAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAAAAoA9QAAAAAACwAAAAAA
AAAAAAAACgBJBQAAAAAEAAAAAAAAAAAAAAABAMMFAAAAAAAAAAABAAAA/QYAAAUABAA3ANgAAAAA
PE1vZHVsZT4AU1RfMTg2YzlkMDFmNmEyNGY1YThmNDE3MzI3MTBiZWE2NjUuZGxsAFJlc291cmNl
cwBTVF8xODZjOWQwMWY2YTI0ZjVhOGY0MTczMjcxMGJlYTY2NS5Qcm9wZXJ0aWVzAFNldHRpbmdz
AFNjcmlwdE1haW4AU1RfMTg2YzlkMDFmNmEyNGY1YThmNDE3MzI3MTBiZWE2NjUAU2NyaXB0UmVz
dWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFz
ZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3Rh
bmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBHZXRZZWFyQW5kUXVhcnRlcgBJc0lwSW5GaWxl
bmFtZQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBoYXNJcABmaWxlbmFtZQBTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVj
dGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVy
c2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVt
LkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBv
aW50QXR0cmlidXRlADxNYWluPmJfXzAAYwBGdW5jYDIAQ1MkPD45X19DYWNoZWRBbm9ueW1vdXNN
ZXRob2REZWxlZ2F0ZTEAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMA
Z2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAU3RyaW5nAFN5c3RlbS5D
b3JlAFN5c3RlbS5MaW5xAEVudW1lcmFibGUAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMASUVu
dW1lcmFibGVgMQBDb3VudABzZXRfVGFza1Jlc3VsdABDaGFyAFNwbGl0AGdldF9MZW5ndGgAU3Vi
c3RyaW5nAENvbmNhdABDb252ZXJ0AFRvSW50MTYASW50MTYAc2V0X1ZhbHVlAFN5c3RlbS5JTwBG
aWxlTG9hZEV4Y2VwdGlvbgBFdmVudHNPYmplY3RXcmFwcGVyAGdldF9FdmVudHMARW1wdHkARmly
ZUVycm9yAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBSZWdleABNYXRjaENvbGxlY3Rp
b24ATWF0Y2hlcwBnZXRfQ291bnQAU1RfMTg2YzlkMDFmNmEyNGY1YThmNDE3MzI3MTBiZWE2NjUu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAABxUwBUAF8AMQA4ADYAYwA5AGQAMAAxAGYA
NgBhADIANABmADUAYQA4AGYANAAxADcAMwAyADcAMQAwAGIAZQBhADYANgA1AC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAjVQBzAGUAcgA6ADoAYwB1AHIAcgBlAG4A
dABGAGkAbABlAAAlVQBzAGUAcgA6ADoAQwBhAGwAZQBuAGQAYQByAFkAZQBhAHIAAAUyADAAABtV
AHMAZQByADoAOgBRAHUAYQByAHQAZQByAAB3UQB1AGEAcgB0AGUAcgAgAGkAbgAgAGYAaQBsAGUA
bgBhAG0AZQAgAGkAcwAgAGkAbgB2AGEAbABpAGQAOgAgAHYAYQBsAHUAZQAgAG0AdQBzAHQAIABi
AGUAIAAxACwAIAAyACwAIAAzACAAbwByACAANAAuAABnUwBjAHIAaQBwAHQAIABUAGEAcwBrACAA
dABvACAAdQBwAGQAYQB0AGUAIABwAGEAcgBhAG0AZQB0AGUAcgBzACAAYgBhAHMAZQBkACAAbwBu
ACAAZgBpAGwAZQAgAG4AYQBtAGUAAICJSQBuAGMAbwByAHIAZQBjAHQAIABwAGEAcgBhAG0AZQB0
AGUAcgAgAGYAbwByAG0AYQB0ACAAaQBuACAAZgBpAGwAZQBuAGEAbQBlACAAZgBvAHIAIABDAGEA
bABlAG4AZABhAHIAIABZAGUAYQByACAAYQBuAGQAIABRAHUAYQByAHQAZQByAAA7QwBhAG4AbgBv
AHQAIABmAGkAbgBkACAAYQAgAHAAYQByAGEAbQBlAHQAZQByACAAbQBhAHQAYwBoAABNXABiAFwA
ZAB7ADEALAAzAH0AXAAuAFwAZAB7ADEALAAzAH0AXAAuAFwAZAB7ADEALAAzAH0AXAAuAFwAZAB7
ADEALAAzAH0AXABiAAD5GDJyDnTQT7BP/riAk5uQAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZ
AyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwEIAEBAgQgAQIOAgYI
AwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEA
AgAAAAAAAwAAAQQAAQIDBwYVEm0CAwIEIAAScQQgABJ1BSABEnkcAyAAHAYVEm0CAwIFIAIBHBgS
EAECCBUSgIUBHgAVEm0CHgACAwoBAwUHAw4CCAYgAR0OHQMDIAAIBSACDggIBQACDg4OBAABBg4E
IAEBHAUgABKAmQIGDgggBQIIDg4OCBQHDg4IDggOCB0DHQ4ICB0DHQ4ICAYgARKAoQ4IBwISgJ0S
gKFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
EC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfMTg2YzlkMDFmNmEyNGY1YThmNDE3MzI3MTBiZWE2NjUA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNAAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQg2AAAAAAAAAAAAAB42AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQNgAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAFURRUAAAEAAVRFFT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAA
MAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAx
ADgANgBjADkAZAAwADEAZgA2AGEAMgA0AGYANQBhADgAZgA0ADEANwAzADIANwAxADAAYgBlAGEA
NgA2ADUAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA0ADQANQAu
ADIAMQA1ADAANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAxADgA
NgBjADkAZAAwADEAZgA2AGEAMgA0AGYANQBhADgAZgA0ADEANwAzADIANwAxADAAYgBlAGEANgA2
ADUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEANAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwAxADgANgBjADkAZAAwADEAZgA2AGEAMgA0AGYANQBhADgAZgA0ADEA
NwAzADIANwAxADAAYgBlAGEANgA2ADUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBUAF8AMQA4ADYAYwA5AGQAMAAxAGYANgBhADIANABmADUAYQA4AGYANAAxADcA
MwAyADcAMQAwAGIAZQBhADYANgA1AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA1ADQANAA1AC4AMgAxADUAMAA1AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADQANAA1AC4AMgAxADUAMAA1AAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select IP id from HSCRC_Load into variable"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{935DDCFA-17B3-4AF6-AA0B-3B173F79FCDC}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Select IP id from HSCRC_Load into variable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::selectIPIntoVar"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="Id"
                SQLTask:DtsVariableName="User::LoadIdForIP" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select OP id from HSCRC_Load into variable"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FE2BC445-6755-447D-AB13-265FCBF393FF}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Select OP id from HSCRC_Load into variable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::selectOPIntoVar"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="Id"
                SQLTask:DtsVariableName="User::LoadIdForOP" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{E44CB425-4C01-4350-8736-36C0F7AE2E7D}"
          DTS:EvalOp="3"
          DTS:Expression="@[$Project::LoadIP] == True"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Create HSCRC_Totals table and HSCRC_Load table if it does not exist"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert IP Load id after checking and deleting any existing matching load id and associated records" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{F20A8335-038B-48BC-BF56-45A26FA15F92}"
          DTS:EvalOp="3"
          DTS:Expression="@[$Project::LoadOP] == True"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Create HSCRC_Totals table and HSCRC_Load table if it does not exist"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert OP Load id after checking and deleting any existing matching load id and associated records" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{1EA1CBAA-9B52-4ECD-8225-F7ABFB7D487C}"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert IP Load id after checking and deleting any existing matching load id and associated records"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select IP id from HSCRC_Load into variable" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{AC8E5353-A55E-4187-A2EF-A93BE630A44B}"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert OP Load id after checking and deleting any existing matching load id and associated records"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select OP id from HSCRC_Load into variable" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{3E14F191-1FAD-4DD4-9F8F-83D4D92F946F}"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select IP id from HSCRC_Load into variable"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{DE4817A1-A24A-4A8E-A8B0-834514D1422F}"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select OP id from HSCRC_Load into variable"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{5763B3FF-0381-4BE4-86D0-59D015C1641B}"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Archive Data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{C86BBCA2-05C8-48BD-92A1-A75251545E7E}"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Archive Data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{DC41AF60-9442-4D03-B1D7-48324DCCC14B}"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Parse filename and update variables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Create HSCRC_Totals table and HSCRC_Load table if it does not exist" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{D1B34B51-B5F2-4217-90F3-693EB94B79CC}"
          DTS:ObjectName="{D1B34B51-B5F2-4217-90F3-693EB94B79CC}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::currentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="157,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Archive Data"
          TopLeft="338.857148627846,337.0352980815" />
        <NodeLayout
          Size="405,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Create HSCRC_Totals table and HSCRC_Load table if it does not exist"
          TopLeft="408.000015326909,34.4470603164092" />
        <NodeLayout
          Size="155,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals"
          TopLeft="129.714296302015,257.741181095084" />
        <NodeLayout
          Size="160,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals"
          TopLeft="586.85716122998,308.517652249584" />
        <NodeLayout
          Size="541,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert IP Load id after checking and deleting any existing matching load id and associated records"
          TopLeft="95.0857246788172,101.741178469675" />
        <NodeLayout
          Size="544,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert OP Load id after checking and deleting any existing matching load id and associated records"
          TopLeft="375.085728629752,159.200003062978" />
        <NodeLayout
          Size="250,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Parse filename and update variables"
          TopLeft="124.571430692867,33.5058824301591" />
        <NodeLayout
          Size="283,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select IP id from HSCRC_Load into variable"
          TopLeft="64.6857269948845,184.47059134975" />
        <NodeLayout
          Size="286,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select OP id from HSCRC_Load into variable"
          TopLeft="518.285731490785,230.21176850672" />
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint]"
          TopLeft="544.266681993583,76.0470603164092">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-178.780957314757,25.6941181532657"
              Start="0,0"
              End="-178.780957314757,18.1941181532657">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,6.33834202859745" />
                  <mssgle:CubicBezierSegment
                    Point1="0,6.33834202859745"
                    Point2="0,10.3383420285974"
                    Point3="-4,10.3383420285974" />
                  <mssgle:LineSegment
                    End="-174.780957314757,10.3383420285974" />
                  <mssgle:CubicBezierSegment
                    Point1="-174.780957314757,10.3383420285974"
                    Point2="-178.780957314757,10.3383420285974"
                    Point3="-178.780957314757,14.3383420285974" />
                  <mssgle:LineSegment
                    End="-178.780957314757,18.1941181532657" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-97.3904786573785,15.3383420285974,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 1]"
          TopLeft="676.533348660242,76.0470603164092">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-29.4476200304894,83.152942746569"
              Start="0,0"
              End="-29.4476200304894,75.652942746569">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.4576013728321" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.4576013728321"
                    Point2="0,33.4576013728321"
                    Point3="-4,33.4576013728321" />
                  <mssgle:LineSegment
                    End="-25.4476200304894,33.4576013728321" />
                  <mssgle:CubicBezierSegment
                    Point1="-25.4476200304894,33.4576013728321"
                    Point2="-29.4476200304894,33.4576013728321"
                    Point3="-29.4476200304894,37.4576013728321" />
                  <mssgle:LineSegment
                    End="-29.4476200304894,75.652942746569" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-22.7238100152447,38.4576013728321,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 2]"
          TopLeft="365.485724678817,143.341178469674">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-159.199997683933,41.1294128800753"
              Start="0,0"
              End="-159.199997683933,33.6294128800753">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5647064400377" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.5647064400377"
                    Point2="0,20.5647064400377"
                    Point3="-4,20.5647064400377" />
                  <mssgle:LineSegment
                    End="-155.199997683933,20.5647064400377" />
                  <mssgle:CubicBezierSegment
                    Point1="-155.199997683933,20.5647064400377"
                    Point2="-159.199997683933,20.5647064400377"
                    Point3="-159.199997683933,24.5647064400377" />
                  <mssgle:LineSegment
                    End="-159.199997683933,33.6294128800753" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 3]"
          TopLeft="647.085728629765,200.800003062978">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.4000028610234,29.4117654437428"
              Start="0,0"
              End="14.4000028610234,21.9117654437428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.7058827218714" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.7058827218714"
                    Point2="0,14.7058827218714"
                    Point3="4,14.7058827218714" />
                  <mssgle:LineSegment
                    End="10.4000028610234,14.7058827218714" />
                  <mssgle:CubicBezierSegment
                    Point1="10.4000028610234,14.7058827218714"
                    Point2="14.4000028610234,14.7058827218714"
                    Point3="14.4000028610234,18.7058827218714" />
                  <mssgle:LineSegment
                    End="14.4000028610234,21.9117654437428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 4]"
          TopLeft="206.80001164845,226.07059134975">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.670589745334"
              Start="0,0"
              End="0,24.170589745334">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.170589745334" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 5]"
          TopLeft="664.171446360384,271.81176850672">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.7058837428634"
              Start="0,0"
              End="0,29.2058837428634">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.2058837428634" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 6]"
          TopLeft="207.314296302015,299.341181095084">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="209.942852325831,37.6941169864162"
              Start="0,0"
              End="209.942852325831,30.1941169864162">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.8470584932081" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.8470584932081"
                    Point2="0,18.8470584932081"
                    Point3="4,18.8470584932081" />
                  <mssgle:LineSegment
                    End="205.942852325831,18.8470584932081" />
                  <mssgle:CubicBezierSegment
                    Point1="205.942852325831,18.8470584932081"
                    Point2="209.942852325831,18.8470584932081"
                    Point3="209.942852325831,22.8470584932081" />
                  <mssgle:LineSegment
                    End="209.942852325831,30.1941169864162" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 7]"
          TopLeft="586.85716122998,329.317652249584">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-91.2000126021338,28.5176458319162"
              Start="0,0"
              End="-83.7000126021338,28.5176458319162">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-41.6000063010669,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-41.6000063010669,0"
                    Point2="-45.6000063010669,0"
                    Point3="-45.6000063010669,4" />
                  <mssgle:LineSegment
                    End="-45.6000063010669,24.5176458319162" />
                  <mssgle:CubicBezierSegment
                    Point1="-45.6000063010669,24.5176458319162"
                    Point2="-45.6000063010669,28.5176458319162"
                    Point3="-49.6000063010669,28.5176458319162" />
                  <mssgle:LineSegment
                    End="-83.7000126021338,28.5176458319162" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 8]"
          TopLeft="374.171430692867,54.7764713732842">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.828584634041,0"
              Start="0,0"
              End="26.328584634041,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.328584634041,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="925,479"
          Size="925,522"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file"
          TopLeft="688.814275321182,79.5294128800759" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="139,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source"
          TopLeft="96.8,22.4" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column"
          TopLeft="91.771430079791,94.9176480197577" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination"
          TopLeft="79,250.6" />
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals.Paths[Excel Source Output]"
          TopLeft="167.485715039895,64">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.9176480197577"
              Start="0,0"
              End="0,23.4176480197577">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4176480197577" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="156,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Data Conversion"
          TopLeft="89,174" />
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals.Paths[Derived Column Output]"
          TopLeft="167.885715039896,136.917648019758">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.0823519802423"
              Start="0,0"
              End="0,29.5823519802423">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5823519802423" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals.Paths[Data Conversion Output]"
          TopLeft="165.75,216">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.6"
              Start="0,0"
              End="0,27.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="139,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source"
          TopLeft="98.4,22.4" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column"
          TopLeft="95.2,110.4" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination"
          TopLeft="87.6,272.2" />
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals.Paths[Excel Source Output]"
          TopLeft="170,64">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.4"
              Start="0,0"
              End="0,38.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="156,42"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Data Conversion"
          TopLeft="99,186" />
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals.Paths[Derived Column Output]"
          TopLeft="174.6,152.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.6"
              Start="0,0"
              End="0,26.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals.Paths[Data Conversion Output]"
          TopLeft="175.05,228">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.2"
              Start="0,0"
              End="0,36.7">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.7" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>