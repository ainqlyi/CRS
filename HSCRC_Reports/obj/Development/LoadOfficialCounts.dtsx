<?xml version="1.0"?>
<DTS:Executable
  DTS:refId="Package" xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:CreatorName="INTRANET\dlucas"
  DTS:CreatorComputerName="T440P-20131227B"
  DTS:CreationDate="6/30/2014 10:46:14 AM"
  DTS:PackageType="5"
  DTS:VersionBuild="279"
  DTS:VersionGUID="{9A1B3169-AE35-4C72-A51A-32E50D490955}"
  DTS:LastModifiedProductVersion="11.0.3402.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="LoadOfficialCounts"
  DTS:DTSID="{0D63413F-C3D6-4EB7-9AFA-B2D96CC9A1AB}"
  DTS:CreationName="SSIS.Package.3">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Totals]"
      DTS:DelayValidation="True"
      DTS:ObjectName="Totals"
      DTS:DTSID="{00512B72-1A6B-4C82-8C99-6089A5431F73}"
      DTS:CreationName="EXCEL">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::currentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\dlucas\Desktop\Load\Control Totals.142.2014.2.f.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:DataType="8"
      DTS:ObjectName="FilePath"
      DTS:DTSID="{8DED3315-4C25-4240-A3C9-DF4E94834B6D}"
      DTS:CreationName="">
      <DTS:Property
        DTS:Name="ParameterValue"
        xml:space="preserve"
        DTS:DataType="8"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="6789"
      DTS:ObjectName="CalendarYear"
      DTS:DTSID="{D2C55E21-FEDF-49BB-BB95-828144FBC403}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="currentFile"
      DTS:DTSID="{6AB55246-BED3-4ABA-9422-CC34C7FE160C}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\dlucas\Desktop\Load\Control Totals.142.2014.2.f.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Expression="&quot;SELECT Id &#xA;FROM &quot; + @[User::HSCRC_Load_Table] + &quot; &#xA;WHERE CalendarYear = &quot; + (DT_STR, 4, 1252) @[User::CalendarYear] + &quot; AND&#xA; Quarter = &quot; + (DT_STR, 1, 1252) @[User::Quarter] + &quot; AND&#xA; PatientTypeClass = 'I'&quot;"
      DTS:EvaluateAsExpression="True"
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="GetLoadIdIP"
      DTS:DTSID="{4ACD370C-BB2E-4500-8AC1-B5D7484E39BB}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8">SELECT Id 
FROM HSCRC_Load 
WHERE CalendarYear = 0 AND
 Quarter = 0 AND
 PatientTypeClass = 'I'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Expression="&quot;SELECT Id &#xA;FROM &quot; + @[User::HSCRC_Load_Table] + &quot; &#xA;WHERE CalendarYear = &quot; + (DT_STR, 4, 1252) @[User::CalendarYear] + &quot; AND&#xA; Quarter = &quot; + (DT_STR, 1, 1252) @[User::Quarter] + &quot; AND&#xA; PatientTypeClass = 'O'&quot;"
      DTS:EvaluateAsExpression="True"
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="GetLoadIdOP"
      DTS:DTSID="{A92AAA6C-2206-4C3E-AB11-BA0D9EEBF7C3}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8">SELECT Id 
FROM HSCRC_Load 
WHERE CalendarYear = 0 AND
 Quarter = 0 AND
 PatientTypeClass = 'O'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="HSCRC_ExcelSheet_Inpatient"
      DTS:DTSID="{60FA3BCE-00DF-4712-9D4A-06469A4522D7}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8">Inpatient$</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="HSCRC_ExcelSheet_Outpatient"
      DTS:DTSID="{15134F18-B3AB-41DB-A0AD-273196B2D36A}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8">Outpatient$</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="HSCRC_Load_Table"
      DTS:DTSID="{36E3BE8E-D45C-4BD0-B650-E6F1D7D705F6}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8">HSCRC_Load</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="HSCRC_Totals_Table"
      DTS:DTSID="{240A0358-A848-4E27-A9A7-F20CB8688AB3}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8">HSCRC_Totals</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Expression="&quot;DECLARE @LoadId INT&#xA; SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = &quot; + (DT_STR, 4, 1252) @[User::CalendarYear] + &quot;&#xA; AND Quarter = &quot; + (DT_STR, 1, 1252) @[User::Quarter] + &quot; AND PatientTypeClass = 'I');&#xA; WHILE(@LoadId IS NOT NULL)&#xA; BEGIN&#xA; IF @LoadId IS NOT NULL&#xA;&#x9;BEGIN&#xA;&#x9;DELETE FROM HSCRC_Totals&#xA;&#x9;WHERE HSCRC_Load_Id = @LoadId&#xA;&#xA;&#x9;DELETE FROM HSCRC_Load WHERE Id = @LoadId&#xA;&#x9;END&#xA;&#x9; SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = &quot; + (DT_STR, 30, 1252) @[User::CalendarYear] + &quot; AND Quarter = &quot; + (DT_STR, 1, 1252) @[User::Quarter] + &quot; AND PatientTypeClass = 'I');&#xA;END&#xA;&#xA;INSERT INTO HSCRC_Load (CalendarYear, Quarter, SourceFilename, PatientTypeClass, LoadDate)&#xA;VALUES (&quot; + (DT_STR, 4, 1252) @[User::CalendarYear] + &quot;,&#xA;&#x9;&#x9;&quot; + (DT_STR, 1,1252) @[User::Quarter] + &quot;,&#xA;&#x9;&#x9;'&quot; + @[User::currentFile] + &quot;',&#xA;&#x9;&#x9;'I', GETDATE());&quot;"
      DTS:EvaluateAsExpression="True"
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="InsertHSCRCLoadIP"
      DTS:DTSID="{A70353D8-CD86-4E94-B726-3107716718A1}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE @LoadId INT
 SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = 0
 AND Quarter = 0 AND PatientTypeClass = 'I');
 WHILE(@LoadId IS NOT NULL)
 BEGIN
 IF @LoadId IS NOT NULL
	BEGIN
	DELETE FROM HSCRC_Totals
	WHERE HSCRC_Load_Id = @LoadId

	DELETE FROM HSCRC_Load WHERE Id = @LoadId
	END
	 SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = 0 AND Quarter = 0 AND PatientTypeClass = 'I');
END

INSERT INTO HSCRC_Load (CalendarYear, Quarter, SourceFilename, PatientTypeClass, LoadDate)
VALUES (0,
		0,
		'C:\Users\dlucas\Desktop\Load\Control Totals.142.2014.2.f.xlsx',
		'I', GETDATE());</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Expression="&quot;DECLARE @LoadId INT&#xA; SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = &quot; + (DT_STR, 4, 1252) @[User::CalendarYear] + &quot;&#xA; AND Quarter = &quot; + (DT_STR, 1, 1252) @[User::Quarter] + &quot; AND PatientTypeClass = 'O');&#xA; WHILE(@LoadId IS NOT NULL)&#xA; BEGIN&#xA; IF @LoadId IS NOT NULL&#xA;&#x9;BEGIN&#xA;&#x9;DELETE FROM HSCRC_Totals&#xA;&#x9;WHERE HSCRC_Load_Id = @LoadId&#xA;&#xA;&#x9;DELETE FROM HSCRC_Load WHERE Id = @LoadId&#xA;&#x9;END&#xA;&#x9; SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = &quot; + (DT_STR, 30, 1252) @[User::CalendarYear] + &quot; AND Quarter = &quot; + (DT_STR, 1, 1252) @[User::Quarter] + &quot; AND PatientTypeClass = 'O');&#xA;END&#xA;&#xA;INSERT INTO HSCRC_Load (CalendarYear, Quarter, SourceFilename, PatientTypeClass, LoadDate)&#xA;VALUES (&quot; + (DT_STR, 4, 1252) @[User::CalendarYear] + &quot;,&#xA;&#x9;&#x9;&quot; + (DT_STR, 1,1252) @[User::Quarter] + &quot;,&#xA;&#x9;&#x9;'&quot; + @[User::currentFile] + &quot;',&#xA;&#x9;&#x9;'O', GETDATE());&quot;"
      DTS:EvaluateAsExpression="True"
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="InsertHSCRCLoadOP"
      DTS:DTSID="{5AE90786-2D27-4A9C-8E07-960380E68D56}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE @LoadId INT
 SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = 0
 AND Quarter = 0 AND PatientTypeClass = 'O');
 WHILE(@LoadId IS NOT NULL)
 BEGIN
 IF @LoadId IS NOT NULL
	BEGIN
	DELETE FROM HSCRC_Totals
	WHERE HSCRC_Load_Id = @LoadId

	DELETE FROM HSCRC_Load WHERE Id = @LoadId
	END
	 SELECT @LoadId = (SELECT TOP 1 id FROM HSCRC_Load WHERE CalendarYear = 0 AND Quarter = 0 AND PatientTypeClass = 'O');
END

INSERT INTO HSCRC_Load (CalendarYear, Quarter, SourceFilename, PatientTypeClass, LoadDate)
VALUES (0,
		0,
		'C:\Users\dlucas\Desktop\Load\Control Totals.142.2014.2.f.xlsx',
		'O', GETDATE());</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="6789"
      DTS:ObjectName="LoadIdForIP"
      DTS:DTSID="{D3A99A49-20E6-4446-BF3F-B2CD675E7960}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="2">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="6789"
      DTS:ObjectName="LoadIdForOP"
      DTS:DTSID="{A439DA98-F20D-4369-BA59-2284F3241564}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="2">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="Quarter"
      DTS:DTSID="{44912E8B-ED94-4526-BBCE-0AACC3992691}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="2">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Expression="&quot;IF NOT EXISTS(SELECT 1 FROM information_schema.tables WHERE table_name LIKE '&quot; + @[User::HSCRC_Load_Table] + &quot;')&#xA;CREATE TABLE &quot; + @[User::HSCRC_Load_Table] + &quot;&#xA;(&#xA;Id INT PRIMARY KEY IDENTITY(1,1),&#xA;CalendarYear INT NOT NULL,&#xA;SourceFilename NVARCHAR(255) NOT NULL,&#xA;PatientTypeClass NVARCHAR(255) NOT NULL,&#xA;LoadDate DATETIME NOT NULL, Quarter INT NOT NULL&#xA;);&#xA;&#xA;IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name LIKE '&quot; + @[User::HSCRC_Totals_Table] + &quot;')&#xA;CREATE TABLE &quot; + @[User::HSCRC_Totals_Table] + &quot;&#xA;(&#xA;Id INT PRIMARY KEY IDENTITY(1,1),&#xA;HSCRC_Load_Id INT FOREIGN KEY REFERENCES HSCRC_LOAD (id),&#xA;HospitalNumber INT NOT NULL,&#xA;HospitalName NVARCHAR(255),&#xA;TotalCase INT,&#xA;LOS INT,&#xA;TotalCharges MONEY&#xA;);&quot;"
      DTS:EvaluateAsExpression="True"
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="sqlStatementCreateTables"
      DTS:DTSID="{4B0FF952-5808-45F2-B55F-37075F22E459}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8">IF NOT EXISTS(SELECT 1 FROM information_schema.tables WHERE table_name LIKE 'HSCRC_Load')
CREATE TABLE HSCRC_Load
(
Id INT PRIMARY KEY IDENTITY(1,1),
CalendarYear INT NOT NULL,
SourceFilename NVARCHAR(255) NOT NULL,
PatientTypeClass NVARCHAR(255) NOT NULL,
LoadDate DATETIME NOT NULL, Quarter INT NOT NULL
);

IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name LIKE 'HSCRC_Totals')
CREATE TABLE HSCRC_Totals
(
Id INT PRIMARY KEY IDENTITY(1,1),
HSCRC_Load_Id INT FOREIGN KEY REFERENCES HSCRC_LOAD (id),
HospitalNumber INT NOT NULL,
HospitalName NVARCHAR(255),
TotalCase INT,
LOS INT,
TotalCharges MONEY
);</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach OP and IP Control Totals File, perform ETL and archive file"
      DTS:DTSID="{9298186C-3785-43B3-9265-E7F958AB204C}"
      DTS:Description="Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP">
      <DTS:ForEachEnumerator
        DTS:ObjectName="{4A50B363-D26E-42BC-8954-56C367907939}"
        DTS:DTSID="{4A50B363-D26E-42BC-8954-56C367907939}"
        DTS:CreationName="DTS.ForEachFileEnumerator.3">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[$Project::SourceFolder]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\dlucas\Desktop\Load" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Archive Data"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:ThreadHint="0"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:LocaleID="-1"
          DTS:DelayValidation="True"
          DTS:ObjectName="Archive Data"
          DTS:DTSID="{A9973EEF-728D-41BF-8709-9BD6983FA232}"
          DTS:Description="File System Task"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::currentFile"
              TaskIsSourceVariable="True"
              TaskDestinationPath="$Project::ArchiveFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Create HSCRC_Totals table and HSCRC_Load table if it does not exist"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:ThreadHint="0"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create HSCRC_Totals table and HSCRC_Load table if it does not exist"
          DTS:DTSID="{7E5A1C3A-3686-400A-9BDF-B33AAFCBCFE3}"
          DTS:Description="Execute SQL Task"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sqlStatementCreateTables" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:LocaleID="-1"
          DTS:DelayValidation="True"
          DTS:ObjectName="Import IP Totals"
          DTS:DTSID="{DB8A40DA-31A2-4CE9-BA64-366A94D13C03}"
          DTS:Description="Data Flow Task"
          DTS:CreationName="SSIS.Pipeline.3">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column"
                  name="Derived Column"
                  componentClassID="{49928E82-9C4E-49F0-AABE-3812B82707EC}"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  usesDispositions="true"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0">
                  <inputs>
                    <input
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Inputs[Derived Column Input]"
                      name="Derived Column Input"
                      description="Input to the Derived Column Transformation">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Output]"
                      name="Derived Column Output"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Output].Columns[HSCRC_Load_ID]"
                          name="HSCRC_Load_ID"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Output].Columns[HSCRC_Load_ID]"
                          dataType="i2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              name="Expression"
                              dataType="System.String"
                              description="Derived Column Expression"
                              containsID="true">@[User::LoadIdForIP]</property>
                            <property
                              name="FriendlyExpression"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              containsID="true"
                              expressionType="Notify">@[User::LoadIdForIP]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Error Output]"
                      name="Derived Column Error Output"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Inputs[Derived Column Input]"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source"
                  name="Excel Source"
                  componentClassID="{8C084929-27D1-479F-9641-ABB7CDADF1AC}"
                  description="Excel Source"
                  usesDispositions="true"
                  version="1"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
                  <properties>
                    <property
                      name="CommandTimeout"
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out.">0</property>
                    <property
                      name="OpenRowset"
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."></property>
                    <property
                      name="OpenRowsetVariable"
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset.">User::HSCRC_ExcelSheet_Inpatient</property>
                    <property
                      name="SqlCommand"
                      dataType="System.String"
                      description="The SQL command to be executed."
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      name="SqlCommandVariable"
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."></property>
                    <property
                      name="AccessMode"
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      typeConverter="AccessMode">1</property>
                    <property
                      name="ParameterMapping"
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Connections[OleDbConnection]"
                      name="OleDbConnection"
                      description="The OLE DB runtime connection used to access the database."
                      connectionManagerID="Package.ConnectionManagers[Totals]"
                      connectionManagerRefId="Package.ConnectionManagers[Totals]" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[HospitalName]"
                          name="HospitalName"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[HospitalName]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[TotalCase]"
                          name="TotalCase"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[TotalCase]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[LOS]"
                          name="LOS"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[LOS]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[TotalCharges]"
                          name="TotalCharges"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[TotalCharges]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[HospitalNumber]"
                          name="HospitalNumber"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[HospitalNumber]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Maryland Inpatient Data Summary]" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          name="F2"
                          dataType="wstr"
                          length="255" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          name="F3"
                          dataType="r8" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          name="F4"
                          dataType="r8" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          name="F5"
                          dataType="cy" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          name="F6"
                          dataType="wstr"
                          length="255" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Maryland Inpatient Data Summary]"
                          name="Maryland Inpatient Data Summary"
                          dataType="wstr"
                          length="255" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output]"
                      name="Excel Source Error Output"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Maryland Inpatient Data Summary]"
                          name="Maryland Inpatient Data Summary"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Maryland Inpatient Data Summary]"
                          length="255"
                          dataType="wstr" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F2]"
                          name="F2"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F2]"
                          length="255"
                          dataType="wstr" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F3]"
                          name="F3"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F3]"
                          dataType="r8" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F4]"
                          name="F4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F4]"
                          dataType="r8" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F5]"
                          name="F5"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F5]"
                          dataType="cy" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination"
                  name="OLE DB Destination"
                  componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
                  description="OLE DB Destination"
                  usesDispositions="true"
                  version="4"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4">
                  <properties>
                    <property
                      name="CommandTimeout"
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out.">0</property>
                    <property
                      name="OpenRowset"
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."></property>
                    <property
                      name="OpenRowsetVariable"
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset.">User::HSCRC_Totals_Table</property>
                    <property
                      name="SqlCommand"
                      dataType="System.String"
                      description="The SQL command to be executed."
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      name="DefaultCodePage"
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source.">1252</property>
                    <property
                      name="AlwaysUseDefaultCodePage"
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data.">false</property>
                    <property
                      name="AccessMode"
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      typeConverter="AccessMode">4</property>
                    <property
                      name="FastLoadKeepIdentity"
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on.">false</property>
                    <property
                      name="FastLoadKeepNulls"
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on.">false</property>
                    <property
                      name="FastLoadOptions"
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on.">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      name="FastLoadMaxInsertCommitSize"
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on.">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Connections[OleDbConnection]"
                      name="OleDbConnection"
                      description="The OLE DB runtime connection used to access the database."
                      connectionManagerID="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}:external"
                      connectionManagerRefId="Project.ConnectionManagers[HSCRC_Reports]" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="OLE DB Destination Input"
                      hasSideEffects="true"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HospitalNumber]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[HospitalNumber]"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalNumber]"
                          cachedName="HospitalNumber"
                          cachedDataType="wstr"
                          cachedLength="255" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HospitalName]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[HospitalName]"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalName]"
                          cachedName="HospitalName"
                          cachedDataType="wstr"
                          cachedLength="255" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TotalCase]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[TotalCase]"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCase]"
                          cachedName="TotalCase"
                          cachedDataType="wstr"
                          cachedLength="255" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LOS]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[LOS]"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LOS]"
                          cachedName="LOS"
                          cachedDataType="wstr"
                          cachedLength="255" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TotalCharges]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output].Columns[TotalCharges]"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCharges]"
                          cachedName="TotalCharges"
                          cachedDataType="wstr"
                          cachedLength="255" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HSCRC_Load_ID]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Output].Columns[HSCRC_Load_ID]"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HSCRC_Load_Id]"
                          cachedName="HSCRC_Load_ID"
                          cachedDataType="i2" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                          name="Id"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HSCRC_Load_Id]"
                          name="HSCRC_Load_Id"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalNumber]"
                          name="HospitalNumber"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalName]"
                          name="HospitalName"
                          dataType="wstr"
                          length="255" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCase]"
                          name="TotalCase"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LOS]"
                          name="LOS"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCharges]"
                          name="TotalCharges"
                          dataType="cy" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      name="OLE DB Destination Error Output"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals.Paths[Derived Column Output]"
                  name="Derived Column Output"
                  startId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Outputs[Derived Column Output]"
                  endId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination.Inputs[OLE DB Destination Input]" />
                <path
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals.Paths[Excel Source Output]"
                  name="Excel Source Output"
                  startId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source.Outputs[Excel Source Output]"
                  endId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column.Inputs[Derived Column Input]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:LocaleID="-1"
          DTS:DelayValidation="True"
          DTS:ObjectName="Import OP Totals"
          DTS:DTSID="{71AE597C-0CAA-40A2-BB1E-CC12EE4E82B6}"
          DTS:Description="Data Flow Task"
          DTS:CreationName="SSIS.Pipeline.3">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column"
                  name="Derived Column"
                  componentClassID="{49928E82-9C4E-49F0-AABE-3812B82707EC}"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  usesDispositions="true"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0">
                  <inputs>
                    <input
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Inputs[Derived Column Input]"
                      name="Derived Column Input"
                      description="Input to the Derived Column Transformation">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Output]"
                      name="Derived Column Output"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Output].Columns[HSCRC_Load_Id]"
                          name="HSCRC_Load_Id"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Output].Columns[HSCRC_Load_Id]"
                          dataType="i2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              name="Expression"
                              dataType="System.String"
                              description="Derived Column Expression"
                              containsID="true">@[User::LoadIdForOP]</property>
                            <property
                              name="FriendlyExpression"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              containsID="true"
                              expressionType="Notify">@[User::LoadIdForOP]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Error Output]"
                      name="Derived Column Error Output"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Inputs[Derived Column Input]"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source"
                  name="Excel Source"
                  componentClassID="{8C084929-27D1-479F-9641-ABB7CDADF1AC}"
                  description="Excel Source"
                  usesDispositions="true"
                  version="1"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
                  <properties>
                    <property
                      name="CommandTimeout"
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out.">0</property>
                    <property
                      name="OpenRowset"
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."></property>
                    <property
                      name="OpenRowsetVariable"
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset.">User::HSCRC_ExcelSheet_Outpatient</property>
                    <property
                      name="SqlCommand"
                      dataType="System.String"
                      description="The SQL command to be executed."
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      name="SqlCommandVariable"
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."></property>
                    <property
                      name="AccessMode"
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      typeConverter="AccessMode">1</property>
                    <property
                      name="ParameterMapping"
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Connections[OleDbConnection]"
                      name="OleDbConnection"
                      description="The OLE DB runtime connection used to access the database."
                      connectionManagerID="Package.ConnectionManagers[Totals]"
                      connectionManagerRefId="Package.ConnectionManagers[Totals]" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[HospitalName]"
                          name="HospitalName"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[HospitalName]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[TotalCase]"
                          name="TotalCase"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[TotalCase]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[TotalCharges]"
                          name="TotalCharges"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[TotalCharges]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[HospitalNumber]"
                          name="HospitalNumber"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[HospitalNumber]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Maryland Outpatient Data Summary (Post-Grouped Data Data)]" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          name="F2"
                          dataType="wstr"
                          length="255" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          name="F3"
                          dataType="r8" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          name="F4"
                          dataType="cy" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          name="F5"
                          dataType="wstr"
                          length="255" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].ExternalColumns[Maryland Outpatient Data Summary (Post-Grouped Data Data)]"
                          name="Maryland Outpatient Data Summary (Post-Grouped Data Data)"
                          dataType="wstr"
                          length="255" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output]"
                      name="Excel Source Error Output"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Maryland Outpatient Data Summary (Post-Grouped Data Data)]"
                          name="Maryland Outpatient Data Summary (Post-Grouped Data Data)"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[Maryland Outpatient Data Summary (Post-Grouped Data Data)]"
                          length="255"
                          dataType="wstr" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F2]"
                          name="F2"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F2]"
                          length="255"
                          dataType="wstr" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F3]"
                          name="F3"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F3]"
                          dataType="r8" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F4]"
                          name="F4"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[F4]"
                          dataType="cy" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination"
                  name="OLE DB Destination"
                  componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
                  description="OLE DB Destination"
                  usesDispositions="true"
                  version="4"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4">
                  <properties>
                    <property
                      name="CommandTimeout"
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out.">0</property>
                    <property
                      name="OpenRowset"
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."></property>
                    <property
                      name="OpenRowsetVariable"
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset.">User::HSCRC_Totals_Table</property>
                    <property
                      name="SqlCommand"
                      dataType="System.String"
                      description="The SQL command to be executed."
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      name="DefaultCodePage"
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source.">1252</property>
                    <property
                      name="AlwaysUseDefaultCodePage"
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data.">false</property>
                    <property
                      name="AccessMode"
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      typeConverter="AccessMode">4</property>
                    <property
                      name="FastLoadKeepIdentity"
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on.">false</property>
                    <property
                      name="FastLoadKeepNulls"
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on.">false</property>
                    <property
                      name="FastLoadOptions"
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on.">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      name="FastLoadMaxInsertCommitSize"
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on.">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Connections[OleDbConnection]"
                      name="OleDbConnection"
                      description="The OLE DB runtime connection used to access the database."
                      connectionManagerID="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}:external"
                      connectionManagerRefId="Project.ConnectionManagers[HSCRC_Reports]" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="OLE DB Destination Input"
                      hasSideEffects="true"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HospitalName]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[HospitalName]"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalName]"
                          cachedName="HospitalName"
                          cachedDataType="wstr"
                          cachedLength="255" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TotalCase]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[TotalCase]"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCase]"
                          cachedName="TotalCase"
                          cachedDataType="wstr"
                          cachedLength="255" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TotalCharges]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[TotalCharges]"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCharges]"
                          cachedName="TotalCharges"
                          cachedDataType="wstr"
                          cachedLength="255" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HospitalNumber]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output].Columns[HospitalNumber]"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalNumber]"
                          cachedName="HospitalNumber"
                          cachedDataType="wstr"
                          cachedLength="255" />
                        <inputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HSCRC_Load_Id]"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Output].Columns[HSCRC_Load_Id]"
                          externalMetadataColumnId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HSCRC_Load_Id]"
                          cachedName="HSCRC_Load_Id"
                          cachedDataType="i2" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                          name="Id"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HSCRC_Load_Id]"
                          name="HSCRC_Load_Id"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalNumber]"
                          name="HospitalNumber"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HospitalName]"
                          name="HospitalName"
                          dataType="wstr"
                          length="255" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCase]"
                          name="TotalCase"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LOS]"
                          name="LOS"
                          dataType="i4" />
                        <externalMetadataColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalCharges]"
                          name="TotalCharges"
                          dataType="cy" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      name="OLE DB Destination Error Output"
                      exclusionGroup="1"
                      synchronousInputId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals.Paths[Derived Column Output]"
                  name="Derived Column Output"
                  startId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Outputs[Derived Column Output]"
                  endId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination.Inputs[OLE DB Destination Input]" />
                <path
                  refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals.Paths[Excel Source Output]"
                  name="Excel Source Output"
                  startId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source.Outputs[Excel Source Output]"
                  endId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column.Inputs[Derived Column Input]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert IP Load id after checking and deleting any existing matching load id and associated records"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:ThreadHint="1"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert IP Load id after checking and deleting any existing matching load id and associated records"
          DTS:DTSID="{42184A72-26CA-4F8C-900B-3307B189DDF5}"
          DTS:Description="Execute SQL Task"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::InsertHSCRCLoadIP" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert OP Load id after checking and deleting any existing matching load id and associated records"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:ThreadHint="0"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert OP Load id after checking and deleting any existing matching load id and associated records"
          DTS:DTSID="{BD7B8DC3-1FBF-4D03-A557-B4AB6EDD721E}"
          DTS:Description="Execute SQL Task"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::InsertHSCRCLoadOP" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Parse filename and update variables"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:ThreadHint="0"
          DTS:LocaleID="-1"
          DTS:ObjectName="Parse filename and update variables"
          DTS:DTSID="{72113AE3-AB90-41A6-839D-19B772FD27C1}"
          DTS:Description="Script Task"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_186c9d01f6a24f5a8f41732710bea665"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::currentFile"
              ReadWriteVariables="User::CalendarYear,User::Quarter">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_186c9d01f6a24f5a8f41732710bea665.Properties.Settings.get_Default():ST_186c9d01f6a24f5a8f41732710bea665.Properties.Sett" +
    "ings")]

namespace ST_186c9d01f6a24f5a8f41732710bea665.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text.RegularExpressions;
using System.Linq;
#endregion

namespace ST_186c9d01f6a24f5a8f41732710bea665
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            int NUM_PARAMETERS = 3;
            string fileName = (string) Dts.Variables["User::currentFile"].Value;
            int i = 0;
            foreach (string part in fileName.Split('.'))
            {
                switch (i) { 
                    case 2:
                        if (part.Length == 4 && part.Contains("20"))
                            Dts.Variables["User::CalendarYear"].Value = Convert.ToInt16(part);
                        else 
                        {
                            Dts.Events.FireError(0, "Script Task to update parameters based on file name", "Incorrect parameter format in filename for Calendar Year", String.Empty, 0);
                        }
                        break;
                    case 3:
                        if(part.Length == 1 && part.All(char.IsDigit))
                        Dts.Variables["User::Quarter"].Value = Convert.ToInt16(part);
                        else
                        {
                            Dts.Events.FireError(0, "Script Task to update parameters based on file name", "Incorrect parameter format in filename for Quarter", String.Empty, 0);
                        }
                        break;
                    default:
                        break;
                }
                i++;
            }

            if (i < NUM_PARAMETERS)
            {
                Dts.Events.FireError(0, "Script Task to update parameters based on file name", "Cannot find a parameter match", String.Empty, 0);
            }

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_186c9d01f6a24f5a8f41732710bea665</msb:CodeName>
		<msb:DisplayName>ST_186c9d01f6a24f5a8f41732710bea665</msb:DisplayName>
		<msb:ProjectId>{28A7208C-BC11-497C-B756-9883E70373FA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_186c9d01f6a24f5a8f41732710bea665.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_186c9d01f6a24f5a8f41732710bea665")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_186c9d01f6a24f5a8f41732710bea665")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="ST_186c9d01f6a24f5a8f41732710bea665.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CD82A4D3-FF76-4663-842A-97FBD21118A7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_186c9d01f6a24f5a8f41732710bea665</RootNamespace>
    <AssemblyName>ST_186c9d01f6a24f5a8f41732710bea665</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_186c9d01f6a24f5a8f41732710bea665.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_186c9d01f6a24f5a8f41732710bea665.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_186c9d01f6a24f5a8f41732710bea665.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_186c9d01f6a24f5a8f41732710bea665.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_186c9d01f6a24f5a8f41732710bea665.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_186c9d01f6a24f5a8f41732710bea665.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOsG0VMAAAAAAAAAAOAAAiELAQsAABQAAAAIAAAAAAAArjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFgyAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
MgAAAAAAAEgAAAACAAUAACMAAFgPAAABAAAAAAAAAEgiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBgB1AQAAAgAAERkKAigWAAAKbxcAAApycwAAcG8YAAAKbxkAAAp0
HgAAAQsWDAcXjR8AAAETBBEEFh8unREEbxoAAAoTBRYTBjjzAAAAEQURBpoNCBMHEQcYWUUCAAAA
BQAAAGkAAAA4ygAAAAlvGwAAChozNwlylwAAcG8cAAAKLCoCKBYAAApvFwAACnKdAABwbxgAAAoJ
KB0AAAqMIQAAAW8eAAAKOIoAAAACKBYAAApvHwAAChZywwAAcHIrAQBwfiAAAAoWbyEAAAomK2YJ
bxsAAAoXMzsJFP4GIgAACnMjAAAKKAEAACssJwIoFgAACm8XAAAKcp0BAHBvGAAACgkoHQAACowh
AAABbx4AAAorIgIoFgAACm8fAAAKFnLDAABwcrkBAHB+IAAAChZvIQAACiYIF1gMEQYXWBMGEQYR
BY5pPwL///8IBi8iAigWAAAKbx8AAAoWcsMAAHByHwIAcH4gAAAKFm8hAAAKJgIoFgAAChZvJQAA
CioeAigmAAAKKgAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAF
AGwAAABMBAAAI34AALgEAAB4BgAAI1N0cmluZ3MAAAAAMAsAAFwCAAAjVVMAjA0AABAAAAAjR1VJ
RAAAAJwNAAC8AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPolMwAWAAABAAAAJQAAAAUAAAAG
AAAACQAAAAEAAAAmAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAEAAAAFAAAAAQAAAAEA
AAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9
AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYA
jwNvAwYArwNvAwYA4APNAwYA/QO6AAYAAgS6AAYAJgRwAgoAUgQ8BAoAawQ8BAYAgARvAw4AogQU
AQ4AxAQUARIAHQX9BBIANQX9BAYAUQW6AAYAWAW6AAYAdwW6AAYAhwW6AA4AlwUUAQYAzgW6ABYA
7QXhBQYAEwb4BQAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0
AH8ADQAEAAgAAwEAAKMAAAARAAQACgARAH8BEwARAKwBFwARAPYBOQAGBh8CRwBWgCcCSgBWgC8C
SgBQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQAB
AKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGJsEiQACALwgAAAAAIYAGgIbAAIA
PSIAAAAAhhi8ARsAAgAAAAEANwI5ALwBWABBALwBWABJALwBWABRALwBWABZALwBWABhALwBWABp
ALwBWABxALwBWAB5ALwBWACBALwBWACJALwBXQCRALwBGwCZALwBGwAJALwBGwChABQEYgChAC8E
aQApALwBbgC5ALwBegDJALwBGwARALwBGwDRALwBGwAZANYEjQDZACcFkgDhAD4FlwDpAEcFnQDx
AF0FoQDxAGMFqADxAG4FrAABAX8FsQDpAI0FtgDZAKsFuwDxALYFwQARAbwFxAD5AMYFzQAMALwB
2gAhASEG4ADZACUGXQAZALwBGwAIABQATgAIABgAUwApAJMAgAAuABsAdgEuACMAdgEuAGMAnAEu
AAsABQEuABMATQEuADMATQEuACsAdgEuADsAfAEuAEMAdgEuAFsAkwFDAGsAUwBJAJMAgABhAJsA
UwCDAKsAUwB1APgAAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQAC
AAUABwDSAASAAAABAAAAxhQNOgAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAA
AAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAAAAALAAAAAAAAAAAAAAAKAN4EAAAAAAQAAAAA
AAAAAAAAAAEA1QUAAAAAAAAAAAEAAAA0BgAABQAEAEkA9AAAAAA8TW9kdWxlPgBTVF8xODZjOWQw
MWY2YTI0ZjVhOGY0MTczMjcxMGJlYTY2NS5kbGwAUmVzb3VyY2VzAFNUXzE4NmM5ZDAxZjZhMjRm
NWE4ZjQxNzMyNzEwYmVhNjY1LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF8xODZj
OWQwMWY2YTI0ZjVhOGY0MTczMjcxMGJlYTY2NQBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3Rl
bQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWlj
cm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tz
LlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291
cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3Vs
dHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVm
YXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNv
bmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmli
dXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3Rp
Y3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxl
cwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAU3RyaW5nAENoYXIAU3BsaXQAZ2V0X0xlbmd0
aABDb250YWlucwBDb252ZXJ0AFRvSW50MTYASW50MTYAc2V0X1ZhbHVlAEV2ZW50c09iamVjdFdy
YXBwZXIAZ2V0X0V2ZW50cwBFbXB0eQBGaXJlRXJyb3IASXNEaWdpdABGdW5jYDIAU3lzdGVtLkNv
cmUAU3lzdGVtLkxpbnEARW51bWVyYWJsZQBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBJRW51
bWVyYWJsZWAxAEFsbABzZXRfVGFza1Jlc3VsdABTVF8xODZjOWQwMWY2YTI0ZjVhOGY0MTczMjcx
MGJlYTY2NS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAABxUwBUAF8AMQA4ADYAYwA5
AGQAMAAxAGYANgBhADIANABmADUAYQA4AGYANAAxADcAMwAyADcAMQAwAGIAZQBhADYANgA1AC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAjVQBzAGUAcgA6ADoAYwB1
AHIAcgBlAG4AdABGAGkAbABlAAAFMgAwAAAlVQBzAGUAcgA6ADoAQwBhAGwAZQBuAGQAYQByAFkA
ZQBhAHIAAGdTAGMAcgBpAHAAdAAgAFQAYQBzAGsAIAB0AG8AIAB1AHAAZABhAHQAZQAgAHAAYQBy
AGEAbQBlAHQAZQByAHMAIABiAGEAcwBlAGQAIABvAG4AIABmAGkAbABlACAAbgBhAG0AZQAAcUkA
bgBjAG8AcgByAGUAYwB0ACAAcABhAHIAYQBtAGUAdABlAHIAIABmAG8AcgBtAGEAdAAgAGkAbgAg
AGYAaQBsAGUAbgBhAG0AZQAgAGYAbwByACAAQwBhAGwAZQBuAGQAYQByACAAWQBlAGEAcgAAG1UA
cwBlAHIAOgA6AFEAdQBhAHIAdABlAHIAAGVJAG4AYwBvAHIAcgBlAGMAdAAgAHAAYQByAGEAbQBl
AHQAZQByACAAZgBvAHIAbQBhAHQAIABpAG4AIABmAGkAbABlAG4AYQBtAGUAIABmAG8AcgAgAFEA
dQBhAHIAdABlAHIAADtDAGEAbgBuAG8AdAAgAGYAaQBuAGQAIABhACAAcABhAHIAYQBtAGUAdABl
AHIAIABtAGEAdABjAGgAAAAm7os5T7UeTqLKZ7vOAnOTAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUD
BhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAA
AAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAAD
AAABBCAAEm0EIAAScQUgARJ1HAMgABwGIAEdDh0DAyAACAQgAQIOBAABBg4EIAEBHAUgABKAiQIG
DgggBQIIDg4OCAQAAQIDBxUSgI0CAwIFIAIBHBgTEAECAhUSgJUBHgAVEoCNAh4AAgMKAQMMBwgI
DggOHQMdDggIRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUXzE4NmM5ZDAxZjZhMjRmNWE4ZjQxNzMyNzEw
YmVhNjY1AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTQAAAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEAgDIAAAAAAAAAAAAAnjIAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAJAyAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEADTrGFAAAAQANOsYUPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAA
MAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADEAOAA2AGMAOQBkADAAMQBmADYAYQAyADQAZgA1AGEAOABmADQAMQA3ADMAMgA3ADEAMABiAGUA
YQA2ADYANQAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADMAMQA4
AC4AMQA0ADgANgAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADEA
OAA2AGMAOQBkADAAMQBmADYAYQAyADQAZgA1AGEAOABmADQAMQA3ADMAMgA3ADEAMABiAGUAYQA2
ADYANQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA0AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAFMAVABfADEAOAA2AGMAOQBkADAAMQBmADYAYQAyADQAZgA1AGEAOABmADQA
MQA3ADMAMgA3ADEAMABiAGUAYQA2ADYANQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAFQAXwAxADgANgBjADkAZAAwADEAZgA2AGEAMgA0AGYANQBhADgAZgA0ADEA
NwAzADIANwAxADAAYgBlAGEANgA2ADUAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADUAMwAxADgALgAxADQAOAA2ADEAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAMwAxADgALgAxADQAOAA2ADEAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAsDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select IP id from HSCRC_Load into variable"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:ThreadHint="1"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:LocaleID="-1"
          DTS:ObjectName="Select IP id from HSCRC_Load into variable"
          DTS:DTSID="{935DDCFA-17B3-4AF6-AA0B-3B173F79FCDC}"
          DTS:Description="Execute SQL Task"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::GetLoadIdIP"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="Id"
                SQLTask:DtsVariableName="User::LoadIdForIP" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select OP id from HSCRC_Load into variable"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:ThreadHint="0"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:LocaleID="-1"
          DTS:ObjectName="Select OP id from HSCRC_Load into variable"
          DTS:DTSID="{FE2BC445-6755-447D-AB13-265FCBF393FF}"
          DTS:Description="Execute SQL Task"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D0B3A9D6-7F3C-427C-B288-9C53318B824B}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::GetLoadIdOP"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="Id"
                SQLTask:DtsVariableName="User::LoadIdForOP" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint]"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Create HSCRC_Totals table and HSCRC_Load table if it does not exist"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert IP Load id after checking and deleting any existing matching load id and associated records"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:DTSID="{E44CB425-4C01-4350-8736-36C0F7AE2E7D}"
          DTS:CreationName="" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 1]"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Create HSCRC_Totals table and HSCRC_Load table if it does not exist"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert OP Load id after checking and deleting any existing matching load id and associated records"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:DTSID="{F20A8335-038B-48BC-BF56-45A26FA15F92}"
          DTS:CreationName="" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 2]"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert IP Load id after checking and deleting any existing matching load id and associated records"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select IP id from HSCRC_Load into variable"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:DTSID="{1EA1CBAA-9B52-4ECD-8225-F7ABFB7D487C}"
          DTS:CreationName="" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 3]"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert OP Load id after checking and deleting any existing matching load id and associated records"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select OP id from HSCRC_Load into variable"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:DTSID="{AC8E5353-A55E-4187-A2EF-A93BE630A44B}"
          DTS:CreationName="" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 4]"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select IP id from HSCRC_Load into variable"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:DTSID="{3E14F191-1FAD-4DD4-9F8F-83D4D92F946F}"
          DTS:CreationName="" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 5]"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select OP id from HSCRC_Load into variable"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:DTSID="{DE4817A1-A24A-4A8E-A8B0-834514D1422F}"
          DTS:CreationName="" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 6]"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Archive Data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:DTSID="{5763B3FF-0381-4BE4-86D0-59D015C1641B}"
          DTS:CreationName="" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 7]"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Archive Data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:DTSID="{C86BBCA2-05C8-48BD-92A1-A75251545E7E}"
          DTS:CreationName="" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 8]"
          DTS:From="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Parse filename and update variables"
          DTS:To="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Create HSCRC_Totals table and HSCRC_Load table if it does not exist"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:DTSID="{DC41AF60-9442-4D03-B1D7-48324DCCC14B}"
          DTS:CreationName="" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:VariableName="User::currentFile"
          DTS:ValueIndex="0"
          DTS:ObjectName="{D9A16703-E182-40D8-AC6C-1D0C16FA6B35}"
          DTS:DTSID="{D9A16703-E182-40D8-AC6C-1D0C16FA6B35}"
          DTS:CreationName="" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Archive Data"
          TopLeft="338.857148627846,337.0352980815" />
        <NodeLayout
          Size="404.8,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Create HSCRC_Totals table and HSCRC_Load table if it does not exist"
          TopLeft="408.000015326909,34.4470603164092" />
        <NodeLayout
          Size="155.2,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals"
          TopLeft="129.714296302015,257.741181095084" />
        <NodeLayout
          Size="160,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals"
          TopLeft="586.85716122998,308.517652249584" />
        <NodeLayout
          Size="540.8,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert IP Load id after checking and deleting any existing matching load id and associated records"
          TopLeft="95.0857246788172,101.741178469675" />
        <NodeLayout
          Size="544,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Insert OP Load id after checking and deleting any existing matching load id and associated records"
          TopLeft="375.085728629752,159.200003062978" />
        <NodeLayout
          Size="249.6,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Parse filename and update variables"
          TopLeft="124.571430692867,33.5058824301591" />
        <NodeLayout
          Size="283.2,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select IP id from HSCRC_Load into variable"
          TopLeft="64.6857269948845,184.47059134975" />
        <NodeLayout
          Size="286.4,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Select OP id from HSCRC_Load into variable"
          TopLeft="518.285731490785,230.21176850672" />
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint]"
          TopLeft="544.266681993583,76.0470603164092">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-178.780957314757,25.6941181532657"
              Start="0,0"
              End="-178.780957314757,18.1941181532657">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,6.33834202859745" />
                  <mssgle:CubicBezierSegment
                    Point1="0,6.33834202859745"
                    Point2="0,10.3383420285974"
                    Point3="-4,10.3383420285974" />
                  <mssgle:LineSegment
                    End="-174.780957314757,10.3383420285974" />
                  <mssgle:CubicBezierSegment
                    Point1="-174.780957314757,10.3383420285974"
                    Point2="-178.780957314757,10.3383420285974"
                    Point3="-178.780957314757,14.3383420285974" />
                  <mssgle:LineSegment
                    End="-178.780957314757,18.1941181532657" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 1]"
          TopLeft="676.533348660242,76.0470603164092">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-29.4476200304894,83.152942746569"
              Start="0,0"
              End="-29.4476200304894,75.652942746569">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.4576013728321" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.4576013728321"
                    Point2="0,33.4576013728321"
                    Point3="-4,33.4576013728321" />
                  <mssgle:LineSegment
                    End="-25.4476200304894,33.4576013728321" />
                  <mssgle:CubicBezierSegment
                    Point1="-25.4476200304894,33.4576013728321"
                    Point2="-29.4476200304894,33.4576013728321"
                    Point3="-29.4476200304894,37.4576013728321" />
                  <mssgle:LineSegment
                    End="-29.4476200304894,75.652942746569" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 2]"
          TopLeft="365.485724678817,143.341178469674">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-159.199997683933,41.1294128800753"
              Start="0,0"
              End="-159.199997683933,33.6294128800753">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5647064400377" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.5647064400377"
                    Point2="0,20.5647064400377"
                    Point3="-4,20.5647064400377" />
                  <mssgle:LineSegment
                    End="-155.199997683933,20.5647064400377" />
                  <mssgle:CubicBezierSegment
                    Point1="-155.199997683933,20.5647064400377"
                    Point2="-159.199997683933,20.5647064400377"
                    Point3="-159.199997683933,24.5647064400377" />
                  <mssgle:LineSegment
                    End="-159.199997683933,33.6294128800753" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 3]"
          TopLeft="647.085728629765,200.800003062978">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.4000028610234,29.4117654437428"
              Start="0,0"
              End="14.4000028610234,21.9117654437428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.7058827218714" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.7058827218714"
                    Point2="0,14.7058827218714"
                    Point3="4,14.7058827218714" />
                  <mssgle:LineSegment
                    End="10.4000028610234,14.7058827218714" />
                  <mssgle:CubicBezierSegment
                    Point1="10.4000028610234,14.7058827218714"
                    Point2="14.4000028610234,14.7058827218714"
                    Point3="14.4000028610234,18.7058827218714" />
                  <mssgle:LineSegment
                    End="14.4000028610234,21.9117654437428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 4]"
          TopLeft="206.80001164845,226.07059134975">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.670589745334"
              Start="0,0"
              End="0,24.170589745334">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.170589745334" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 5]"
          TopLeft="664.171446360384,271.81176850672">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.7058837428634"
              Start="0,0"
              End="0,29.2058837428634">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.2058837428634" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 6]"
          TopLeft="207.314296302015,299.341181095084">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="209.942852325831,37.6941169864162"
              Start="0,0"
              End="209.942852325831,30.1941169864162">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.8470584932081" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.8470584932081"
                    Point2="0,18.8470584932081"
                    Point3="4,18.8470584932081" />
                  <mssgle:LineSegment
                    End="205.942852325831,18.8470584932081" />
                  <mssgle:CubicBezierSegment
                    Point1="205.942852325831,18.8470584932081"
                    Point2="209.942852325831,18.8470584932081"
                    Point3="209.942852325831,22.8470584932081" />
                  <mssgle:LineSegment
                    End="209.942852325831,30.1941169864162" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 7]"
          TopLeft="586.85716122998,329.317652249584">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-91.2000126021338,28.5176458319162"
              Start="0,0"
              End="-83.7000126021338,28.5176458319162">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-41.6000063010669,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-41.6000063010669,0"
                    Point2="-45.6000063010669,0"
                    Point3="-45.6000063010669,4" />
                  <mssgle:LineSegment
                    End="-45.6000063010669,24.5176458319162" />
                  <mssgle:CubicBezierSegment
                    Point1="-45.6000063010669,24.5176458319162"
                    Point2="-45.6000063010669,28.5176458319162"
                    Point3="-49.6000063010669,28.5176458319162" />
                  <mssgle:LineSegment
                    End="-83.7000126021338,28.5176458319162" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file.PrecedenceConstraints[Constraint 8]"
          TopLeft="374.171430692867,54.7764713732842">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.828584634041,0"
              Start="0,0"
              End="26.328584634041,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.328584634041,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="924.8,478.4"
          Size="924.8,521.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file"
          TopLeft="689.814275321182,79.5294128800759" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination"
          TopLeft="86.8571443363112,182.305884909712" />
        <NodeLayout
          Size="139.2,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source"
          TopLeft="102.85714460879,15.294117861553" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Derived Column"
          TopLeft="88.571430079791,96.5176480197577" />
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals.Paths[Excel Source Output]"
          TopLeft="168.91428734429,56.894117861553">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.6235301582047"
              Start="0,0"
              End="0,32.1235301582047">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.1235301582047" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals.Paths[Derived Column Output]"
          TopLeft="168.914287208051,138.117648019758">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.1882368899547"
              Start="0,0"
              End="0,36.6882368899547">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.6882368899547" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import IP Totals\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="139.2,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source"
          TopLeft="98.4,22.4" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Derived Column"
          TopLeft="95.2,110.4" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination"
          TopLeft="86.4,204" />
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals.Paths[Excel Source Output]"
          TopLeft="170,64">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.4"
              Start="0,0"
              End="0,38.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals.Paths[Derived Column Output]"
          TopLeft="172,152">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach OP and IP Control Totals File, perform ETL and archive file\Import OP Totals\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>